<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="repository" version="12.0.0.2017041100">
  <ownedViewpoints name="viewpoint-Editor">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="diagram-Repository" domainClass="repository.Repository" enablePopupBars="true">
      <metamodel href="../MDSD/model/metamodel.ecore#/"/>
      <metamodel href="../MDSD/model/metamodel.ecore#//viewType"/>
      <metamodel href="../MDSD/model/metamodel.ecore#//viewType/repository"/>
      <metamodel href="../MDSD/model/metamodel.ecore#//viewType/assembly"/>
      <metamodel href="../MDSD/model/metamodel.ecore#//viewType/environment"/>
      <metamodel href="../MDSD/model/metamodel.ecore#//viewType/allocation"/>
      <defaultLayer name="Default">
        <edgeMappings name="Edge-Component-Interface-Requires" deletionDescription="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete-Requires']" sourceMapping="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Component'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-CompositeComponent']" targetMapping="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']" targetFinderExpression="feature:requires">
          <style lineStyle="dash" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="&lt;&lt;Requires>>">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Edge-Component-Interface-Provides" deletionDescription="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete-Provides']" sourceMapping="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Component'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-CompositeComponent']" targetMapping="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']" targetFinderExpression="feature:provides">
          <style lineStyle="dash" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="&lt;&lt;Provides>>">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Edge-Interface-Interface-SuperType" deletionDescription="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete-Super']" sourceMapping="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']" targetMapping="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']" targetFinderExpression="feature:superInterfaces">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="container-Component" semanticCandidatesExpression="aql:(self.components->reject(component|component.oclIsKindOf(assembly::CompositeComponent)))" domainClass="Component" childrenPresentation="List">
          <subNodeMappings name="node-Behaviour-Description" semanticCandidatesExpression="feature:description" domainClass="BehaviorDescription">
            <style xsi:type="style:SquareDescription" labelSize="12" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="container-Interface" semanticCandidatesExpression="feature:interfaces" synchronizationLock="true" domainClass="repository::Interface" childrenPresentation="VerticalStack">
          <subContainerMappings name="container-Signature" semanticCandidatesExpression="feature:signatures" domainClass="repository::Signature" childrenPresentation="VerticalStack">
            <subNodeMappings name="node-Return-Type" semanticCandidatesExpression="feature:returnType" domainClass="repository.Type">
              <style xsi:type="style:SquareDescription" labelSize="1" showIcon="false" labelExpression="" labelAlignment="LEFT" hideLabelByDefault="true" sizeComputationExpression="0">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              </style>
            </subNodeMappings>
            <subContainerMappings name="Parameter" semanticCandidatesExpression="feature:parameters" domainClass="repository.Parameter" childrenPresentation="List">
              <subNodeMappings name="Type" semanticCandidatesExpression="feature:eAllContents" domainClass="repository::Type"/>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'    ' + self.name + ': ' + if(self.type->notEmpty())then (self.type.eClass().name) else ('') endif" labelAlignment="LEFT">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="aql: ' ' + self.name + '(): ' + self.returnType.eClass().name" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <containerMappings name="container-CompositeComponent" domainClass="assembly::CompositeComponent">
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="tools">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete-Requires">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="requires" elementExpression="aql:elementView.targetNode.oclAsType(diagram::AbstractDNode).target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete-Provides">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="provides" elementExpression="aql:elementView.targetNode.oclAsType(diagram::AbstractDNode).target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete-Super">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="superInterfaces" elementExpression="aql:elementView.targetNode.oclAsType(diagram::AbstractDNode).target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="create-Component" containerMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Component']" iconPath="/MDSD.Sirius/icons/featureconfigModelFile.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository.Component" referenceName="components"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="create-CompositeComponent" containerMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-CompositeComponent']" iconPath="/MDSD.Sirius/icons/featureconfigModelFile.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="assembly::CompositeComponent" referenceName="components">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="CompositComponentName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="create-Interface" containerMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']" iconPath="/MDSD.Sirius/icons/UnitsModelFile.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository.Interface" referenceName="interfaces">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="InterfaceName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="create-Signature" containerMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository.Signature" referenceName="signatures">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::VoidType" referenceName="returnType" variableName="returnType"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="signaturName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="create-Parameter" forceRefresh="true" containerMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository.Parameter" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="parameterName"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Component-set-Required-Interface" label="Add Required Interface" edgeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@edgeMappings[name='Edge-Component-Interface-Requires']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="requires" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Component-set-Provides-Interface" label="Add Provided Interface" edgeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@edgeMappings[name='Edge-Component-Interface-Provides']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="provides" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Edge Creation Add Super Interface" label="Add Super Interface" edgeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@edgeMappings[name='Edge-Interface-Interface-SuperType']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superInterfaces" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Types">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-void-type" label="Set Type Void" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type']" iconPath="/MDSD.Sirius/icons/CreateConfigNode_attributevalue_AttributeValue.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::VoidType" referenceName="returnType"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-map-type" label="Set Type Map" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfigNode_attributevalue_AttributeValue.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::MapType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::MapType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-string-type" label="Set Type String" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfigNode_attributevalue_StringAttributeValue.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::StringType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::StringType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-boolean-type" label="Set Type Boolean" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfigNode_attributevalue_ExternalObjectAttributeValue.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::BooleanType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::BooleanType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-int-type" label="Set Type Int" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfigNode_attributevalue_IntegerAttributeValue.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::IntType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::IntType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-list-type" label="Set Type List" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfigNode_origin_Feature.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::ListType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::ListType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-date-type" label="Set Type Date" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfiguration_configOverrides_FeatureConfig.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::DateType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::DateType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-long-type" label="Set Type Long" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfiguration_defaultConfig_FeatureConfig.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::LongType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::LongType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-float-type" label="Set Type Float" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateFeatureConfig_confignode_ConfigNode.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::FloatType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::FloatType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="create-char-type" label="Set Type Char" nodeMappings="//@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subNodeMappings[name='node-Return-Type'] //@ownedViewpoints[name='viewpoint-Editor']/@ownedRepresentations[name='diagram-Repository']/@defaultLayer/@containerMappings[name='container-Interface']/@subContainerMappings[name='container-Signature']/@subContainerMappings[name='Parameter']/@subNodeMappings[name='Type']" iconPath="/MDSD.Sirius/icons/CreateConfigNode_attributevalue_AttributeValue.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Signature)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="returnType"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::CharType" referenceName="returnType"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(repository::Parameter)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="type"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="repository::CharType" referenceName="type" variableName="type"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
  </ownedViewpoints>
</description:Group>
