/*
 * generated by Xtext 2.30.0
 */
package kit.mdsd.xtext.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ComponentBasedSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ComponentBasedSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cComponentBasedSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cComponentBasedSystemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRepositoriesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cRepositoriesAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cRepositoriesRepositoryParserRuleCall_3_2_0 = (RuleCall)cRepositoriesAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cRepositoriesAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cRepositoriesRepositoryParserRuleCall_3_3_1_0 = (RuleCall)cRepositoriesAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cEnvironmentsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cEnvironmentsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_4_2_0 = (RuleCall)cEnvironmentsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cEnvironmentsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cEnvironmentsEnvironmentParserRuleCall_4_3_1_0 = (RuleCall)cEnvironmentsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cSystemsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cSystemsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cSystemsSystemParserRuleCall_5_2_0 = (RuleCall)cSystemsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cSystemsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cSystemsSystemParserRuleCall_5_3_1_0 = (RuleCall)cSystemsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAllocationContextsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cAllocationContextsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cAllocationContextsAllocationContextParserRuleCall_6_2_0 = (RuleCall)cAllocationContextsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cAllocationContextsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cAllocationContextsAllocationContextParserRuleCall_6_3_1_0 = (RuleCall)cAllocationContextsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ComponentBasedSystem returns metaModel::ComponentBasedSystem:
		//    {metaModel::ComponentBasedSystem}
		//    'ComponentBasedSystem'
		//    '{'
		//        ('repositories' '{' repositories+=Repository ( "," repositories+=Repository)* '}' )?
		//        ('environments' '{' environments+=Environment ( "," environments+=Environment)* '}' )?
		//        ('systems' '{' systems+=System ( "," systems+=System)* '}' )?
		//        ('allocationContexts' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{metaModel::ComponentBasedSystem}
		//'ComponentBasedSystem'
		//'{'
		//    ('repositories' '{' repositories+=Repository ( "," repositories+=Repository)* '}' )?
		//    ('environments' '{' environments+=Environment ( "," environments+=Environment)* '}' )?
		//    ('systems' '{' systems+=System ( "," systems+=System)* '}' )?
		//    ('allocationContexts' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{metaModel::ComponentBasedSystem}
		public Action getComponentBasedSystemAction_0() { return cComponentBasedSystemAction_0; }
		
		//'ComponentBasedSystem'
		public Keyword getComponentBasedSystemKeyword_1() { return cComponentBasedSystemKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('repositories' '{' repositories+=Repository ( "," repositories+=Repository)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'repositories'
		public Keyword getRepositoriesKeyword_3_0() { return cRepositoriesKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//repositories+=Repository
		public Assignment getRepositoriesAssignment_3_2() { return cRepositoriesAssignment_3_2; }
		
		//Repository
		public RuleCall getRepositoriesRepositoryParserRuleCall_3_2_0() { return cRepositoriesRepositoryParserRuleCall_3_2_0; }
		
		//( "," repositories+=Repository)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//repositories+=Repository
		public Assignment getRepositoriesAssignment_3_3_1() { return cRepositoriesAssignment_3_3_1; }
		
		//Repository
		public RuleCall getRepositoriesRepositoryParserRuleCall_3_3_1_0() { return cRepositoriesRepositoryParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('environments' '{' environments+=Environment ( "," environments+=Environment)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'environments'
		public Keyword getEnvironmentsKeyword_4_0() { return cEnvironmentsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//environments+=Environment
		public Assignment getEnvironmentsAssignment_4_2() { return cEnvironmentsAssignment_4_2; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_4_2_0() { return cEnvironmentsEnvironmentParserRuleCall_4_2_0; }
		
		//( "," environments+=Environment)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//environments+=Environment
		public Assignment getEnvironmentsAssignment_4_3_1() { return cEnvironmentsAssignment_4_3_1; }
		
		//Environment
		public RuleCall getEnvironmentsEnvironmentParserRuleCall_4_3_1_0() { return cEnvironmentsEnvironmentParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('systems' '{' systems+=System ( "," systems+=System)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'systems'
		public Keyword getSystemsKeyword_5_0() { return cSystemsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//systems+=System
		public Assignment getSystemsAssignment_5_2() { return cSystemsAssignment_5_2; }
		
		//System
		public RuleCall getSystemsSystemParserRuleCall_5_2_0() { return cSystemsSystemParserRuleCall_5_2_0; }
		
		//( "," systems+=System)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//systems+=System
		public Assignment getSystemsAssignment_5_3_1() { return cSystemsAssignment_5_3_1; }
		
		//System
		public RuleCall getSystemsSystemParserRuleCall_5_3_1_0() { return cSystemsSystemParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('allocationContexts' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'allocationContexts'
		public Keyword getAllocationContextsKeyword_6_0() { return cAllocationContextsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//allocationContexts+=AllocationContext
		public Assignment getAllocationContextsAssignment_6_2() { return cAllocationContextsAssignment_6_2; }
		
		//AllocationContext
		public RuleCall getAllocationContextsAllocationContextParserRuleCall_6_2_0() { return cAllocationContextsAllocationContextParserRuleCall_6_2_0; }
		
		//( "," allocationContexts+=AllocationContext)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//allocationContexts+=AllocationContext
		public Assignment getAllocationContextsAssignment_6_3_1() { return cAllocationContextsAssignment_6_3_1; }
		
		//AllocationContext
		public RuleCall getAllocationContextsAllocationContextParserRuleCall_6_3_1_0() { return cAllocationContextsAllocationContextParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class DelegationConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.DelegationConnector");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDelegationConnectorRequiredParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDelegationConnectorProvidedParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//DelegationConnector returns assembly::DelegationConnector:
		//    DelegationConnectorRequired | DelegationConnectorProvided;
		@Override public ParserRule getRule() { return rule; }
		
		//DelegationConnectorRequired | DelegationConnectorProvided
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//DelegationConnectorRequired
		public RuleCall getDelegationConnectorRequiredParserRuleCall_0() { return cDelegationConnectorRequiredParserRuleCall_0; }
		
		//DelegationConnectorProvided
		public RuleCall getDelegationConnectorProvidedParserRuleCall_1() { return cDelegationConnectorProvidedParserRuleCall_1; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComplexTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMapTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStringTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cIntTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cListTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDateTypeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cLongTypeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cFloatTypeParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cCharTypeParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cVoidTypeParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//Type returns repository::Type:
		//    ComplexType | MapType | StringType | BooleanType | IntType | ListType | DateType | LongType | FloatType | CharType | VoidType;
		@Override public ParserRule getRule() { return rule; }
		
		//ComplexType | MapType | StringType | BooleanType | IntType | ListType | DateType | LongType | FloatType | CharType | VoidType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ComplexType
		public RuleCall getComplexTypeParserRuleCall_0() { return cComplexTypeParserRuleCall_0; }
		
		//MapType
		public RuleCall getMapTypeParserRuleCall_1() { return cMapTypeParserRuleCall_1; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_2() { return cStringTypeParserRuleCall_2; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_3() { return cBooleanTypeParserRuleCall_3; }
		
		//IntType
		public RuleCall getIntTypeParserRuleCall_4() { return cIntTypeParserRuleCall_4; }
		
		//ListType
		public RuleCall getListTypeParserRuleCall_5() { return cListTypeParserRuleCall_5; }
		
		//DateType
		public RuleCall getDateTypeParserRuleCall_6() { return cDateTypeParserRuleCall_6; }
		
		//LongType
		public RuleCall getLongTypeParserRuleCall_7() { return cLongTypeParserRuleCall_7; }
		
		//FloatType
		public RuleCall getFloatTypeParserRuleCall_8() { return cFloatTypeParserRuleCall_8; }
		
		//CharType
		public RuleCall getCharTypeParserRuleCall_9() { return cCharTypeParserRuleCall_9; }
		
		//VoidType
		public RuleCall getVoidTypeParserRuleCall_10() { return cVoidTypeParserRuleCall_10; }
	}
	public class ParameterTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ParameterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cComplexTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMapTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStringTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cBooleanTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cIntTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cListTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cDateTypeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cLongTypeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cFloatTypeParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cCharTypeParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		
		//ParameterType returns repository::ParameterType:
		//    ComplexType | MapType | StringType | BooleanType | IntType | ListType | DateType | LongType | FloatType | CharType;
		@Override public ParserRule getRule() { return rule; }
		
		//ComplexType | MapType | StringType | BooleanType | IntType | ListType | DateType | LongType | FloatType | CharType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ComplexType
		public RuleCall getComplexTypeParserRuleCall_0() { return cComplexTypeParserRuleCall_0; }
		
		//MapType
		public RuleCall getMapTypeParserRuleCall_1() { return cMapTypeParserRuleCall_1; }
		
		//StringType
		public RuleCall getStringTypeParserRuleCall_2() { return cStringTypeParserRuleCall_2; }
		
		//BooleanType
		public RuleCall getBooleanTypeParserRuleCall_3() { return cBooleanTypeParserRuleCall_3; }
		
		//IntType
		public RuleCall getIntTypeParserRuleCall_4() { return cIntTypeParserRuleCall_4; }
		
		//ListType
		public RuleCall getListTypeParserRuleCall_5() { return cListTypeParserRuleCall_5; }
		
		//DateType
		public RuleCall getDateTypeParserRuleCall_6() { return cDateTypeParserRuleCall_6; }
		
		//LongType
		public RuleCall getLongTypeParserRuleCall_7() { return cLongTypeParserRuleCall_7; }
		
		//FloatType
		public RuleCall getFloatTypeParserRuleCall_8() { return cFloatTypeParserRuleCall_8; }
		
		//CharType
		public RuleCall getCharTypeParserRuleCall_9() { return cCharTypeParserRuleCall_9; }
	}
	public class RepositoryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Repository");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRepositoryAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRepositoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cComponentsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cComponentsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cComponentsComponentParserRuleCall_3_2_0 = (RuleCall)cComponentsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cComponentsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cComponentsComponentParserRuleCall_3_3_1_0 = (RuleCall)cComponentsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInterfacesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInterfacesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInterfacesInterfaceParserRuleCall_4_2_0 = (RuleCall)cInterfacesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cInterfacesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cInterfacesInterfaceParserRuleCall_4_3_1_0 = (RuleCall)cInterfacesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Repository returns repository::Repository:
		//    {repository::Repository}
		//    'Repository'
		//    '{'
		//        ('components' '{' components+=Component ( "," components+=Component)* '}' )?
		//        ('interfaces' '{' interfaces+=Interface ( "," interfaces+=Interface)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::Repository}
		//'Repository'
		//'{'
		//    ('components' '{' components+=Component ( "," components+=Component)* '}' )?
		//    ('interfaces' '{' interfaces+=Interface ( "," interfaces+=Interface)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{repository::Repository}
		public Action getRepositoryAction_0() { return cRepositoryAction_0; }
		
		//'Repository'
		public Keyword getRepositoryKeyword_1() { return cRepositoryKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('components' '{' components+=Component ( "," components+=Component)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'components'
		public Keyword getComponentsKeyword_3_0() { return cComponentsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//components+=Component
		public Assignment getComponentsAssignment_3_2() { return cComponentsAssignment_3_2; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_3_2_0() { return cComponentsComponentParserRuleCall_3_2_0; }
		
		//( "," components+=Component)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//components+=Component
		public Assignment getComponentsAssignment_3_3_1() { return cComponentsAssignment_3_3_1; }
		
		//Component
		public RuleCall getComponentsComponentParserRuleCall_3_3_1_0() { return cComponentsComponentParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('interfaces' '{' interfaces+=Interface ( "," interfaces+=Interface)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'interfaces'
		public Keyword getInterfacesKeyword_4_0() { return cInterfacesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//interfaces+=Interface
		public Assignment getInterfacesAssignment_4_2() { return cInterfacesAssignment_4_2; }
		
		//Interface
		public RuleCall getInterfacesInterfaceParserRuleCall_4_2_0() { return cInterfacesInterfaceParserRuleCall_4_2_0; }
		
		//( "," interfaces+=Interface)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//interfaces+=Interface
		public Assignment getInterfacesAssignment_4_3_1() { return cInterfacesAssignment_4_3_1; }
		
		//Interface
		public RuleCall getInterfacesInterfaceParserRuleCall_4_3_1_0() { return cInterfacesInterfaceParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EnvironmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Environment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEnvironmentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEnvironmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cContainerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cContainersAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cContainersContainerParserRuleCall_3_2_0 = (RuleCall)cContainersAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cContainersAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cContainersContainerParserRuleCall_3_3_1_0 = (RuleCall)cContainersAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLinkKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cLinksAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cLinksLinkParserRuleCall_4_2_0 = (RuleCall)cLinksAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cLinksAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cLinksLinkParserRuleCall_4_3_1_0 = (RuleCall)cLinksAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Environment returns environment::Environment:
		//    {environment::Environment}
		//    'Environment'
		//    '{'
		//        ('container' '{' containers+=Container ( "," containers+=Container)* '}' )?
		//        ('link' '{' links+=Link ( "," links+=Link)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{environment::Environment}
		//'Environment'
		//'{'
		//    ('container' '{' containers+=Container ( "," containers+=Container)* '}' )?
		//    ('link' '{' links+=Link ( "," links+=Link)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{environment::Environment}
		public Action getEnvironmentAction_0() { return cEnvironmentAction_0; }
		
		//'Environment'
		public Keyword getEnvironmentKeyword_1() { return cEnvironmentKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('container' '{' containers+=Container ( "," containers+=Container)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'container'
		public Keyword getContainerKeyword_3_0() { return cContainerKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//containers+=Container
		public Assignment getContainersAssignment_3_2() { return cContainersAssignment_3_2; }
		
		//Container
		public RuleCall getContainersContainerParserRuleCall_3_2_0() { return cContainersContainerParserRuleCall_3_2_0; }
		
		//( "," containers+=Container)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//containers+=Container
		public Assignment getContainersAssignment_3_3_1() { return cContainersAssignment_3_3_1; }
		
		//Container
		public RuleCall getContainersContainerParserRuleCall_3_3_1_0() { return cContainersContainerParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('link' '{' links+=Link ( "," links+=Link)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'link'
		public Keyword getLinkKeyword_4_0() { return cLinkKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//links+=Link
		public Assignment getLinksAssignment_4_2() { return cLinksAssignment_4_2; }
		
		//Link
		public RuleCall getLinksLinkParserRuleCall_4_2_0() { return cLinksLinkParserRuleCall_4_2_0; }
		
		//( "," links+=Link)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//links+=Link
		public Assignment getLinksAssignment_4_3_1() { return cLinksAssignment_4_3_1; }
		
		//Link
		public RuleCall getLinksLinkParserRuleCall_4_3_1_0() { return cLinksLinkParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cProvidesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cProvidesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cProvidesInterfaceCrossReference_4_0 = (CrossReference)cProvidesAssignment_4.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_4_0_1 = (RuleCall)cProvidesInterfaceCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cProvidesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cProvidesInterfaceCrossReference_5_1_0 = (CrossReference)cProvidesAssignment_5_1.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_5_1_0_1 = (RuleCall)cProvidesInterfaceCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEncapsulatedInstancesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cEncapsulatedInstancesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEncapsulatedInstancesAssemblyContextParserRuleCall_9_0 = (RuleCall)cEncapsulatedInstancesAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cEncapsulatedInstancesAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cEncapsulatedInstancesAssemblyContextParserRuleCall_10_1_0 = (RuleCall)cEncapsulatedInstancesAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cDelegationConnectorsKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cDelegationConnectorsAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cDelegationConnectorsDelegationConnectorParserRuleCall_12_2_0 = (RuleCall)cDelegationConnectorsAssignment_12_2.eContents().get(0);
		private final Group cGroup_12_3 = (Group)cGroup_12.eContents().get(3);
		private final Keyword cCommaKeyword_12_3_0 = (Keyword)cGroup_12_3.eContents().get(0);
		private final Assignment cDelegationConnectorsAssignment_12_3_1 = (Assignment)cGroup_12_3.eContents().get(1);
		private final RuleCall cDelegationConnectorsDelegationConnectorParserRuleCall_12_3_1_0 = (RuleCall)cDelegationConnectorsAssignment_12_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12_4 = (Keyword)cGroup_12.eContents().get(4);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cAssemblyConnectorsKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cAssemblyConnectorsAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cAssemblyConnectorsAssemblyConnectorParserRuleCall_13_2_0 = (RuleCall)cAssemblyConnectorsAssignment_13_2.eContents().get(0);
		private final Group cGroup_13_3 = (Group)cGroup_13.eContents().get(3);
		private final Keyword cCommaKeyword_13_3_0 = (Keyword)cGroup_13_3.eContents().get(0);
		private final Assignment cAssemblyConnectorsAssignment_13_3_1 = (Assignment)cGroup_13_3.eContents().get(1);
		private final RuleCall cAssemblyConnectorsAssemblyConnectorParserRuleCall_13_3_1_0 = (RuleCall)cAssemblyConnectorsAssignment_13_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13_4 = (Keyword)cGroup_13.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//System returns assembly::System:
		//    'System'
		//    '{'
		//        'provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')'
		//        'encapsulatedInstances' '{' encapsulatedInstances+=AssemblyContext ( "," encapsulatedInstances+=AssemblyContext)* '}'
		//        ('delegationConnectors' '{' delegationConnectors+=DelegationConnector ( "," delegationConnectors+=DelegationConnector)* '}' )?
		//        ('assemblyConnectors' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'System'
		//'{'
		//    'provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')'
		//    'encapsulatedInstances' '{' encapsulatedInstances+=AssemblyContext ( "," encapsulatedInstances+=AssemblyContext)* '}'
		//    ('delegationConnectors' '{' delegationConnectors+=DelegationConnector ( "," delegationConnectors+=DelegationConnector)* '}' )?
		//    ('assemblyConnectors' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'System'
		public Keyword getSystemKeyword_0() { return cSystemKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'provides'
		public Keyword getProvidesKeyword_2() { return cProvidesKeyword_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_4() { return cProvidesAssignment_4; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_4_0() { return cProvidesInterfaceCrossReference_4_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_4_0_1() { return cProvidesInterfaceEStringParserRuleCall_4_0_1; }
		
		//( "," provides+=[repository::Interface|EString])*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_5_1() { return cProvidesAssignment_5_1; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_5_1_0() { return cProvidesInterfaceCrossReference_5_1_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_5_1_0_1() { return cProvidesInterfaceEStringParserRuleCall_5_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
		
		//'encapsulatedInstances'
		public Keyword getEncapsulatedInstancesKeyword_7() { return cEncapsulatedInstancesKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//encapsulatedInstances+=AssemblyContext
		public Assignment getEncapsulatedInstancesAssignment_9() { return cEncapsulatedInstancesAssignment_9; }
		
		//AssemblyContext
		public RuleCall getEncapsulatedInstancesAssemblyContextParserRuleCall_9_0() { return cEncapsulatedInstancesAssemblyContextParserRuleCall_9_0; }
		
		//( "," encapsulatedInstances+=AssemblyContext)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//encapsulatedInstances+=AssemblyContext
		public Assignment getEncapsulatedInstancesAssignment_10_1() { return cEncapsulatedInstancesAssignment_10_1; }
		
		//AssemblyContext
		public RuleCall getEncapsulatedInstancesAssemblyContextParserRuleCall_10_1_0() { return cEncapsulatedInstancesAssemblyContextParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//('delegationConnectors' '{' delegationConnectors+=DelegationConnector ( "," delegationConnectors+=DelegationConnector)* '}' )?
		public Group getGroup_12() { return cGroup_12; }
		
		//'delegationConnectors'
		public Keyword getDelegationConnectorsKeyword_12_0() { return cDelegationConnectorsKeyword_12_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_12_1() { return cLeftCurlyBracketKeyword_12_1; }
		
		//delegationConnectors+=DelegationConnector
		public Assignment getDelegationConnectorsAssignment_12_2() { return cDelegationConnectorsAssignment_12_2; }
		
		//DelegationConnector
		public RuleCall getDelegationConnectorsDelegationConnectorParserRuleCall_12_2_0() { return cDelegationConnectorsDelegationConnectorParserRuleCall_12_2_0; }
		
		//( "," delegationConnectors+=DelegationConnector)*
		public Group getGroup_12_3() { return cGroup_12_3; }
		
		//","
		public Keyword getCommaKeyword_12_3_0() { return cCommaKeyword_12_3_0; }
		
		//delegationConnectors+=DelegationConnector
		public Assignment getDelegationConnectorsAssignment_12_3_1() { return cDelegationConnectorsAssignment_12_3_1; }
		
		//DelegationConnector
		public RuleCall getDelegationConnectorsDelegationConnectorParserRuleCall_12_3_1_0() { return cDelegationConnectorsDelegationConnectorParserRuleCall_12_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12_4() { return cRightCurlyBracketKeyword_12_4; }
		
		//('assemblyConnectors' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
		public Group getGroup_13() { return cGroup_13; }
		
		//'assemblyConnectors'
		public Keyword getAssemblyConnectorsKeyword_13_0() { return cAssemblyConnectorsKeyword_13_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13_1() { return cLeftCurlyBracketKeyword_13_1; }
		
		//assemblyConnectors+=AssemblyConnector
		public Assignment getAssemblyConnectorsAssignment_13_2() { return cAssemblyConnectorsAssignment_13_2; }
		
		//AssemblyConnector
		public RuleCall getAssemblyConnectorsAssemblyConnectorParserRuleCall_13_2_0() { return cAssemblyConnectorsAssemblyConnectorParserRuleCall_13_2_0; }
		
		//( "," assemblyConnectors+=AssemblyConnector)*
		public Group getGroup_13_3() { return cGroup_13_3; }
		
		//","
		public Keyword getCommaKeyword_13_3_0() { return cCommaKeyword_13_3_0; }
		
		//assemblyConnectors+=AssemblyConnector
		public Assignment getAssemblyConnectorsAssignment_13_3_1() { return cAssemblyConnectorsAssignment_13_3_1; }
		
		//AssemblyConnector
		public RuleCall getAssemblyConnectorsAssemblyConnectorParserRuleCall_13_3_1_0() { return cAssemblyConnectorsAssemblyConnectorParserRuleCall_13_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13_4() { return cRightCurlyBracketKeyword_13_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class AllocationContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.AllocationContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAllocationContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAssemblyContextKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAssemblyContextAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cAssemblyContextAssemblyContextCrossReference_4_0 = (CrossReference)cAssemblyContextAssignment_4.eContents().get(0);
		private final RuleCall cAssemblyContextAssemblyContextEStringParserRuleCall_4_0_1 = (RuleCall)cAssemblyContextAssemblyContextCrossReference_4_0.eContents().get(1);
		private final Keyword cContainerKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cContainerAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cContainerContainerCrossReference_6_0 = (CrossReference)cContainerAssignment_6.eContents().get(0);
		private final RuleCall cContainerContainerEStringParserRuleCall_6_0_1 = (RuleCall)cContainerContainerCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//AllocationContext returns allocation::AllocationContext:
		//    'AllocationContext'
		//    name=EString
		//    '{'
		//        'assemblyContext' assemblyContext=[assembly::AssemblyContext|EString]
		//        'container' container=[environment::Container|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'AllocationContext'
		//name=EString
		//'{'
		//    'assemblyContext' assemblyContext=[assembly::AssemblyContext|EString]
		//    'container' container=[environment::Container|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'AllocationContext'
		public Keyword getAllocationContextKeyword_0() { return cAllocationContextKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'assemblyContext'
		public Keyword getAssemblyContextKeyword_3() { return cAssemblyContextKeyword_3; }
		
		//assemblyContext=[assembly::AssemblyContext|EString]
		public Assignment getAssemblyContextAssignment_4() { return cAssemblyContextAssignment_4; }
		
		//[assembly::AssemblyContext|EString]
		public CrossReference getAssemblyContextAssemblyContextCrossReference_4_0() { return cAssemblyContextAssemblyContextCrossReference_4_0; }
		
		//EString
		public RuleCall getAssemblyContextAssemblyContextEStringParserRuleCall_4_0_1() { return cAssemblyContextAssemblyContextEStringParserRuleCall_4_0_1; }
		
		//'container'
		public Keyword getContainerKeyword_5() { return cContainerKeyword_5; }
		
		//container=[environment::Container|EString]
		public Assignment getContainerAssignment_6() { return cContainerAssignment_6; }
		
		//[environment::Container|EString]
		public CrossReference getContainerContainerCrossReference_6_0() { return cContainerContainerCrossReference_6_0; }
		
		//EString
		public RuleCall getContainerContainerEStringParserRuleCall_6_0_1() { return cContainerContainerEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Component");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cComponentAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Keyword cComponentKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_0_2_0 = (RuleCall)cNameAssignment_0_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_0_4 = (Group)cGroup_0.eContents().get(4);
		private final Keyword cRequiresKeyword_0_4_0 = (Keyword)cGroup_0_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_4_1 = (Keyword)cGroup_0_4.eContents().get(1);
		private final Assignment cRequiresAssignment_0_4_2 = (Assignment)cGroup_0_4.eContents().get(2);
		private final CrossReference cRequiresInterfaceCrossReference_0_4_2_0 = (CrossReference)cRequiresAssignment_0_4_2.eContents().get(0);
		private final RuleCall cRequiresInterfaceEStringParserRuleCall_0_4_2_0_1 = (RuleCall)cRequiresInterfaceCrossReference_0_4_2_0.eContents().get(1);
		private final Group cGroup_0_4_3 = (Group)cGroup_0_4.eContents().get(3);
		private final Keyword cCommaKeyword_0_4_3_0 = (Keyword)cGroup_0_4_3.eContents().get(0);
		private final Assignment cRequiresAssignment_0_4_3_1 = (Assignment)cGroup_0_4_3.eContents().get(1);
		private final CrossReference cRequiresInterfaceCrossReference_0_4_3_1_0 = (CrossReference)cRequiresAssignment_0_4_3_1.eContents().get(0);
		private final RuleCall cRequiresInterfaceEStringParserRuleCall_0_4_3_1_0_1 = (RuleCall)cRequiresInterfaceCrossReference_0_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_4_4 = (Keyword)cGroup_0_4.eContents().get(4);
		private final Group cGroup_0_5 = (Group)cGroup_0.eContents().get(5);
		private final Keyword cProvidesKeyword_0_5_0 = (Keyword)cGroup_0_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_5_1 = (Keyword)cGroup_0_5.eContents().get(1);
		private final Assignment cProvidesAssignment_0_5_2 = (Assignment)cGroup_0_5.eContents().get(2);
		private final CrossReference cProvidesInterfaceCrossReference_0_5_2_0 = (CrossReference)cProvidesAssignment_0_5_2.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_0_5_2_0_1 = (RuleCall)cProvidesInterfaceCrossReference_0_5_2_0.eContents().get(1);
		private final Group cGroup_0_5_3 = (Group)cGroup_0_5.eContents().get(3);
		private final Keyword cCommaKeyword_0_5_3_0 = (Keyword)cGroup_0_5_3.eContents().get(0);
		private final Assignment cProvidesAssignment_0_5_3_1 = (Assignment)cGroup_0_5_3.eContents().get(1);
		private final CrossReference cProvidesInterfaceCrossReference_0_5_3_1_0 = (CrossReference)cProvidesAssignment_0_5_3_1.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_0_5_3_1_0_1 = (RuleCall)cProvidesInterfaceCrossReference_0_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_0_5_4 = (Keyword)cGroup_0_5.eContents().get(4);
		private final Group cGroup_0_6 = (Group)cGroup_0.eContents().get(6);
		private final Keyword cDescriptionKeyword_0_6_0 = (Keyword)cGroup_0_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_0_6_1 = (Assignment)cGroup_0_6.eContents().get(1);
		private final RuleCall cDescriptionBehaviourDescriptionParserRuleCall_0_6_1_0 = (RuleCall)cDescriptionAssignment_0_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_7 = (Keyword)cGroup_0.eContents().get(7);
		private final RuleCall cCompositeComponentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Component returns repository::Component:
		//    {repository::Component}
		//    'Component'
		//    name=EString
		//    '{'
		//        ('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
		//        ('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
		//        ('description' description=BehaviourDescription)?
		//    '}' | CompositeComponent;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::Component}
		//'Component'
		//name=EString
		//'{'
		//    ('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
		//    ('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
		//    ('description' description=BehaviourDescription)?
		//'}' | CompositeComponent
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{repository::Component}
		//'Component'
		//name=EString
		//'{'
		//    ('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
		//    ('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
		//    ('description' description=BehaviourDescription)?
		//'}'
		public Group getGroup_0() { return cGroup_0; }
		
		//{repository::Component}
		public Action getComponentAction_0_0() { return cComponentAction_0_0; }
		
		//'Component'
		public Keyword getComponentKeyword_0_1() { return cComponentKeyword_0_1; }
		
		//name=EString
		public Assignment getNameAssignment_0_2() { return cNameAssignment_0_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_2_0() { return cNameEStringParserRuleCall_0_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0_3() { return cLeftCurlyBracketKeyword_0_3; }
		
		//('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
		public Group getGroup_0_4() { return cGroup_0_4; }
		
		//'requires'
		public Keyword getRequiresKeyword_0_4_0() { return cRequiresKeyword_0_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_4_1() { return cLeftParenthesisKeyword_0_4_1; }
		
		//requires+=[repository::Interface|EString]
		public Assignment getRequiresAssignment_0_4_2() { return cRequiresAssignment_0_4_2; }
		
		//[repository::Interface|EString]
		public CrossReference getRequiresInterfaceCrossReference_0_4_2_0() { return cRequiresInterfaceCrossReference_0_4_2_0; }
		
		//EString
		public RuleCall getRequiresInterfaceEStringParserRuleCall_0_4_2_0_1() { return cRequiresInterfaceEStringParserRuleCall_0_4_2_0_1; }
		
		//( "," requires+=[repository::Interface|EString])*
		public Group getGroup_0_4_3() { return cGroup_0_4_3; }
		
		//","
		public Keyword getCommaKeyword_0_4_3_0() { return cCommaKeyword_0_4_3_0; }
		
		//requires+=[repository::Interface|EString]
		public Assignment getRequiresAssignment_0_4_3_1() { return cRequiresAssignment_0_4_3_1; }
		
		//[repository::Interface|EString]
		public CrossReference getRequiresInterfaceCrossReference_0_4_3_1_0() { return cRequiresInterfaceCrossReference_0_4_3_1_0; }
		
		//EString
		public RuleCall getRequiresInterfaceEStringParserRuleCall_0_4_3_1_0_1() { return cRequiresInterfaceEStringParserRuleCall_0_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_4_4() { return cRightParenthesisKeyword_0_4_4; }
		
		//('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
		public Group getGroup_0_5() { return cGroup_0_5; }
		
		//'provides'
		public Keyword getProvidesKeyword_0_5_0() { return cProvidesKeyword_0_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0_5_1() { return cLeftParenthesisKeyword_0_5_1; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_0_5_2() { return cProvidesAssignment_0_5_2; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_0_5_2_0() { return cProvidesInterfaceCrossReference_0_5_2_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_0_5_2_0_1() { return cProvidesInterfaceEStringParserRuleCall_0_5_2_0_1; }
		
		//( "," provides+=[repository::Interface|EString])*
		public Group getGroup_0_5_3() { return cGroup_0_5_3; }
		
		//","
		public Keyword getCommaKeyword_0_5_3_0() { return cCommaKeyword_0_5_3_0; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_0_5_3_1() { return cProvidesAssignment_0_5_3_1; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_0_5_3_1_0() { return cProvidesInterfaceCrossReference_0_5_3_1_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_0_5_3_1_0_1() { return cProvidesInterfaceEStringParserRuleCall_0_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_0_5_4() { return cRightParenthesisKeyword_0_5_4; }
		
		//('description' description=BehaviourDescription)?
		public Group getGroup_0_6() { return cGroup_0_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_0_6_0() { return cDescriptionKeyword_0_6_0; }
		
		//description=BehaviourDescription
		public Assignment getDescriptionAssignment_0_6_1() { return cDescriptionAssignment_0_6_1; }
		
		//BehaviourDescription
		public RuleCall getDescriptionBehaviourDescriptionParserRuleCall_0_6_1_0() { return cDescriptionBehaviourDescriptionParserRuleCall_0_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_0_7() { return cRightCurlyBracketKeyword_0_7; }
		
		//CompositeComponent
		public RuleCall getCompositeComponentParserRuleCall_1() { return cCompositeComponentParserRuleCall_1; }
	}
	public class CompositeComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.CompositeComponent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompositeComponentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCompositeComponentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRequiresKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRequiresAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cRequiresInterfaceCrossReference_4_2_0 = (CrossReference)cRequiresAssignment_4_2.eContents().get(0);
		private final RuleCall cRequiresInterfaceEStringParserRuleCall_4_2_0_1 = (RuleCall)cRequiresInterfaceCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRequiresAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cRequiresInterfaceCrossReference_4_3_1_0 = (CrossReference)cRequiresAssignment_4_3_1.eContents().get(0);
		private final RuleCall cRequiresInterfaceEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cRequiresInterfaceCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cProvidesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cProvidesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cProvidesInterfaceCrossReference_5_2_0 = (CrossReference)cProvidesAssignment_5_2.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_5_2_0_1 = (RuleCall)cProvidesInterfaceCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cProvidesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cProvidesInterfaceCrossReference_5_3_1_0 = (CrossReference)cProvidesAssignment_5_3_1.eContents().get(0);
		private final RuleCall cProvidesInterfaceEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cProvidesInterfaceCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cDescriptionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cDescriptionBehaviourDescriptionParserRuleCall_6_1_0 = (RuleCall)cDescriptionAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cEncapsulatedInstancesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cEncapsulatedInstancesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final CrossReference cEncapsulatedInstancesAssemblyContextCrossReference_7_2_0 = (CrossReference)cEncapsulatedInstancesAssignment_7_2.eContents().get(0);
		private final RuleCall cEncapsulatedInstancesAssemblyContextEStringParserRuleCall_7_2_0_1 = (RuleCall)cEncapsulatedInstancesAssemblyContextCrossReference_7_2_0.eContents().get(1);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cEncapsulatedInstancesAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final CrossReference cEncapsulatedInstancesAssemblyContextCrossReference_7_3_1_0 = (CrossReference)cEncapsulatedInstancesAssignment_7_3_1.eContents().get(0);
		private final RuleCall cEncapsulatedInstancesAssemblyContextEStringParserRuleCall_7_3_1_0_1 = (RuleCall)cEncapsulatedInstancesAssemblyContextCrossReference_7_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//CompositeComponent returns assembly::CompositeComponent:
		//    {assembly::CompositeComponent}
		//    'CompositeComponent'
		//    name=EString
		//    '{'
		//        ('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
		//        ('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
		//        ('description' description=BehaviourDescription)?
		//        ('encapsulatedInstances' '(' encapsulatedInstances+=[assembly::AssemblyContext|EString] ( "," encapsulatedInstances+=[assembly::AssemblyContext|EString])* ')')?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{assembly::CompositeComponent}
		//'CompositeComponent'
		//name=EString
		//'{'
		//    ('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
		//    ('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
		//    ('description' description=BehaviourDescription)?
		//    ('encapsulatedInstances' '(' encapsulatedInstances+=[assembly::AssemblyContext|EString] ( "," encapsulatedInstances+=[assembly::AssemblyContext|EString])* ')')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{assembly::CompositeComponent}
		public Action getCompositeComponentAction_0() { return cCompositeComponentAction_0; }
		
		//'CompositeComponent'
		public Keyword getCompositeComponentKeyword_1() { return cCompositeComponentKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'requires'
		public Keyword getRequiresKeyword_4_0() { return cRequiresKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//requires+=[repository::Interface|EString]
		public Assignment getRequiresAssignment_4_2() { return cRequiresAssignment_4_2; }
		
		//[repository::Interface|EString]
		public CrossReference getRequiresInterfaceCrossReference_4_2_0() { return cRequiresInterfaceCrossReference_4_2_0; }
		
		//EString
		public RuleCall getRequiresInterfaceEStringParserRuleCall_4_2_0_1() { return cRequiresInterfaceEStringParserRuleCall_4_2_0_1; }
		
		//( "," requires+=[repository::Interface|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//requires+=[repository::Interface|EString]
		public Assignment getRequiresAssignment_4_3_1() { return cRequiresAssignment_4_3_1; }
		
		//[repository::Interface|EString]
		public CrossReference getRequiresInterfaceCrossReference_4_3_1_0() { return cRequiresInterfaceCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getRequiresInterfaceEStringParserRuleCall_4_3_1_0_1() { return cRequiresInterfaceEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'provides'
		public Keyword getProvidesKeyword_5_0() { return cProvidesKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_5_2() { return cProvidesAssignment_5_2; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_5_2_0() { return cProvidesInterfaceCrossReference_5_2_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_5_2_0_1() { return cProvidesInterfaceEStringParserRuleCall_5_2_0_1; }
		
		//( "," provides+=[repository::Interface|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//provides+=[repository::Interface|EString]
		public Assignment getProvidesAssignment_5_3_1() { return cProvidesAssignment_5_3_1; }
		
		//[repository::Interface|EString]
		public CrossReference getProvidesInterfaceCrossReference_5_3_1_0() { return cProvidesInterfaceCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getProvidesInterfaceEStringParserRuleCall_5_3_1_0_1() { return cProvidesInterfaceEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//('description' description=BehaviourDescription)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'description'
		public Keyword getDescriptionKeyword_6_0() { return cDescriptionKeyword_6_0; }
		
		//description=BehaviourDescription
		public Assignment getDescriptionAssignment_6_1() { return cDescriptionAssignment_6_1; }
		
		//BehaviourDescription
		public RuleCall getDescriptionBehaviourDescriptionParserRuleCall_6_1_0() { return cDescriptionBehaviourDescriptionParserRuleCall_6_1_0; }
		
		//('encapsulatedInstances' '(' encapsulatedInstances+=[assembly::AssemblyContext|EString] ( "," encapsulatedInstances+=[assembly::AssemblyContext|EString])* ')')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'encapsulatedInstances'
		public Keyword getEncapsulatedInstancesKeyword_7_0() { return cEncapsulatedInstancesKeyword_7_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7_1() { return cLeftParenthesisKeyword_7_1; }
		
		//encapsulatedInstances+=[assembly::AssemblyContext|EString]
		public Assignment getEncapsulatedInstancesAssignment_7_2() { return cEncapsulatedInstancesAssignment_7_2; }
		
		//[assembly::AssemblyContext|EString]
		public CrossReference getEncapsulatedInstancesAssemblyContextCrossReference_7_2_0() { return cEncapsulatedInstancesAssemblyContextCrossReference_7_2_0; }
		
		//EString
		public RuleCall getEncapsulatedInstancesAssemblyContextEStringParserRuleCall_7_2_0_1() { return cEncapsulatedInstancesAssemblyContextEStringParserRuleCall_7_2_0_1; }
		
		//( "," encapsulatedInstances+=[assembly::AssemblyContext|EString])*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//encapsulatedInstances+=[assembly::AssemblyContext|EString]
		public Assignment getEncapsulatedInstancesAssignment_7_3_1() { return cEncapsulatedInstancesAssignment_7_3_1; }
		
		//[assembly::AssemblyContext|EString]
		public CrossReference getEncapsulatedInstancesAssemblyContextCrossReference_7_3_1_0() { return cEncapsulatedInstancesAssemblyContextCrossReference_7_3_1_0; }
		
		//EString
		public RuleCall getEncapsulatedInstancesAssemblyContextEStringParserRuleCall_7_3_1_0_1() { return cEncapsulatedInstancesAssemblyContextEStringParserRuleCall_7_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7_4() { return cRightParenthesisKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInterfaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInterfaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cSignaturesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cSignaturesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cSignaturesSignatureParserRuleCall_4_2_0 = (RuleCall)cSignaturesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cSignaturesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cSignaturesSignatureParserRuleCall_4_3_1_0 = (RuleCall)cSignaturesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Interface returns repository::Interface:
		//    {repository::Interface}
		//    'Interface'
		//    name=EString
		//    '{'
		//        ('signatures' '{' signatures+=Signature ( "," signatures+=Signature)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::Interface}
		//'Interface'
		//name=EString
		//'{'
		//    ('signatures' '{' signatures+=Signature ( "," signatures+=Signature)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{repository::Interface}
		public Action getInterfaceAction_0() { return cInterfaceAction_0; }
		
		//'Interface'
		public Keyword getInterfaceKeyword_1() { return cInterfaceKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('signatures' '{' signatures+=Signature ( "," signatures+=Signature)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'signatures'
		public Keyword getSignaturesKeyword_4_0() { return cSignaturesKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//signatures+=Signature
		public Assignment getSignaturesAssignment_4_2() { return cSignaturesAssignment_4_2; }
		
		//Signature
		public RuleCall getSignaturesSignatureParserRuleCall_4_2_0() { return cSignaturesSignatureParserRuleCall_4_2_0; }
		
		//( "," signatures+=Signature)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//signatures+=Signature
		public Assignment getSignaturesAssignment_4_3_1() { return cSignaturesAssignment_4_3_1; }
		
		//Signature
		public RuleCall getSignaturesSignatureParserRuleCall_4_3_1_0() { return cSignaturesSignatureParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class BehaviourDescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.BehaviourDescription");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBehaviourDescriptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBehaviourDescriptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cInternalActionsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cInternalActionsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cInternalActionsInternalActionParserRuleCall_3_2_0 = (RuleCall)cInternalActionsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cInternalActionsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cInternalActionsInternalActionParserRuleCall_3_3_1_0 = (RuleCall)cInternalActionsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExternalCallsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cExternalCallsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cExternalCallsExternalCallParserRuleCall_4_2_0 = (RuleCall)cExternalCallsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cExternalCallsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cExternalCallsExternalCallParserRuleCall_4_3_1_0 = (RuleCall)cExternalCallsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLoopsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLoopsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cLoopsLoopParserRuleCall_5_2_0 = (RuleCall)cLoopsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cLoopsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cLoopsLoopParserRuleCall_5_3_1_0 = (RuleCall)cLoopsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cBranchesKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cBranchesAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cBranchesBranchParserRuleCall_6_2_0 = (RuleCall)cBranchesAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cBranchesAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cBranchesBranchParserRuleCall_6_3_1_0 = (RuleCall)cBranchesAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//BehaviourDescription returns repository::BehaviourDescription:
		//    {repository::BehaviourDescription}
		//    'BehaviourDescription'
		//    '{'
		//        ('internalActions' '{' internalActions+=InternalAction ( "," internalActions+=InternalAction)* '}' )?
		//        ('externalCalls' '{' externalCalls+=ExternalCall ( "," externalCalls+=ExternalCall)* '}' )?
		//        ('loops' '{' loops+=Loop ( "," loops+=Loop)* '}' )?
		//        ('branches' '{' branches+=Branch ( "," branches+=Branch)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::BehaviourDescription}
		//'BehaviourDescription'
		//'{'
		//    ('internalActions' '{' internalActions+=InternalAction ( "," internalActions+=InternalAction)* '}' )?
		//    ('externalCalls' '{' externalCalls+=ExternalCall ( "," externalCalls+=ExternalCall)* '}' )?
		//    ('loops' '{' loops+=Loop ( "," loops+=Loop)* '}' )?
		//    ('branches' '{' branches+=Branch ( "," branches+=Branch)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{repository::BehaviourDescription}
		public Action getBehaviourDescriptionAction_0() { return cBehaviourDescriptionAction_0; }
		
		//'BehaviourDescription'
		public Keyword getBehaviourDescriptionKeyword_1() { return cBehaviourDescriptionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('internalActions' '{' internalActions+=InternalAction ( "," internalActions+=InternalAction)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'internalActions'
		public Keyword getInternalActionsKeyword_3_0() { return cInternalActionsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//internalActions+=InternalAction
		public Assignment getInternalActionsAssignment_3_2() { return cInternalActionsAssignment_3_2; }
		
		//InternalAction
		public RuleCall getInternalActionsInternalActionParserRuleCall_3_2_0() { return cInternalActionsInternalActionParserRuleCall_3_2_0; }
		
		//( "," internalActions+=InternalAction)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//internalActions+=InternalAction
		public Assignment getInternalActionsAssignment_3_3_1() { return cInternalActionsAssignment_3_3_1; }
		
		//InternalAction
		public RuleCall getInternalActionsInternalActionParserRuleCall_3_3_1_0() { return cInternalActionsInternalActionParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('externalCalls' '{' externalCalls+=ExternalCall ( "," externalCalls+=ExternalCall)* '}' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'externalCalls'
		public Keyword getExternalCallsKeyword_4_0() { return cExternalCallsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//externalCalls+=ExternalCall
		public Assignment getExternalCallsAssignment_4_2() { return cExternalCallsAssignment_4_2; }
		
		//ExternalCall
		public RuleCall getExternalCallsExternalCallParserRuleCall_4_2_0() { return cExternalCallsExternalCallParserRuleCall_4_2_0; }
		
		//( "," externalCalls+=ExternalCall)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//externalCalls+=ExternalCall
		public Assignment getExternalCallsAssignment_4_3_1() { return cExternalCallsAssignment_4_3_1; }
		
		//ExternalCall
		public RuleCall getExternalCallsExternalCallParserRuleCall_4_3_1_0() { return cExternalCallsExternalCallParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('loops' '{' loops+=Loop ( "," loops+=Loop)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'loops'
		public Keyword getLoopsKeyword_5_0() { return cLoopsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//loops+=Loop
		public Assignment getLoopsAssignment_5_2() { return cLoopsAssignment_5_2; }
		
		//Loop
		public RuleCall getLoopsLoopParserRuleCall_5_2_0() { return cLoopsLoopParserRuleCall_5_2_0; }
		
		//( "," loops+=Loop)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//loops+=Loop
		public Assignment getLoopsAssignment_5_3_1() { return cLoopsAssignment_5_3_1; }
		
		//Loop
		public RuleCall getLoopsLoopParserRuleCall_5_3_1_0() { return cLoopsLoopParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('branches' '{' branches+=Branch ( "," branches+=Branch)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'branches'
		public Keyword getBranchesKeyword_6_0() { return cBranchesKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//branches+=Branch
		public Assignment getBranchesAssignment_6_2() { return cBranchesAssignment_6_2; }
		
		//Branch
		public RuleCall getBranchesBranchParserRuleCall_6_2_0() { return cBranchesBranchParserRuleCall_6_2_0; }
		
		//( "," branches+=Branch)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//branches+=Branch
		public Assignment getBranchesAssignment_6_3_1() { return cBranchesAssignment_6_3_1; }
		
		//Branch
		public RuleCall getBranchesBranchParserRuleCall_6_3_1_0() { return cBranchesBranchParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class InternalActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.InternalAction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInternalActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInternalActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InternalAction returns repository::InternalAction:
		//    {repository::InternalAction}
		//    'InternalAction'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::InternalAction}
		//'InternalAction'
		public Group getGroup() { return cGroup; }
		
		//{repository::InternalAction}
		public Action getInternalActionAction_0() { return cInternalActionAction_0; }
		
		//'InternalAction'
		public Keyword getInternalActionKeyword_1() { return cInternalActionKeyword_1; }
	}
	public class ExternalCallElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ExternalCall");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExternalCallAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExternalCallKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ExternalCall returns repository::ExternalCall:
		//    {repository::ExternalCall}
		//    'ExternalCall'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::ExternalCall}
		//'ExternalCall'
		public Group getGroup() { return cGroup; }
		
		//{repository::ExternalCall}
		public Action getExternalCallAction_0() { return cExternalCallAction_0; }
		
		//'ExternalCall'
		public Keyword getExternalCallKeyword_1() { return cExternalCallKeyword_1; }
	}
	public class LoopElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Loop");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoopAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLoopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Loop returns repository::Loop:
		//    {repository::Loop}
		//    'Loop'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::Loop}
		//'Loop'
		public Group getGroup() { return cGroup; }
		
		//{repository::Loop}
		public Action getLoopAction_0() { return cLoopAction_0; }
		
		//'Loop'
		public Keyword getLoopKeyword_1() { return cLoopKeyword_1; }
	}
	public class BranchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Branch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBranchAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBranchKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Branch returns repository::Branch:
		//    {repository::Branch}
		//    'Branch'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::Branch}
		//'Branch'
		public Group getGroup() { return cGroup; }
		
		//{repository::Branch}
		public Action getBranchAction_0() { return cBranchAction_0; }
		
		//'Branch'
		public Keyword getBranchKeyword_1() { return cBranchKeyword_1; }
	}
	public class SignatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Signature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSignatureKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReturnTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cReturnTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cReturnTypeTypeParserRuleCall_4_0 = (RuleCall)cReturnTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cParametersKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cParametersAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_5_2_0 = (RuleCall)cParametersAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cParametersAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_5_3_1_0 = (RuleCall)cParametersAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Signature returns repository::Signature:
		//    'Signature'
		//    name=EString
		//    '{'
		//        'returnType' returnType=Type
		//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Signature'
		//name=EString
		//'{'
		//    'returnType' returnType=Type
		//    ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Signature'
		public Keyword getSignatureKeyword_0() { return cSignatureKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'returnType'
		public Keyword getReturnTypeKeyword_3() { return cReturnTypeKeyword_3; }
		
		//returnType=Type
		public Assignment getReturnTypeAssignment_4() { return cReturnTypeAssignment_4; }
		
		//Type
		public RuleCall getReturnTypeTypeParserRuleCall_4_0() { return cReturnTypeTypeParserRuleCall_4_0; }
		
		//('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'parameters'
		public Keyword getParametersKeyword_5_0() { return cParametersKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_5_2() { return cParametersAssignment_5_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_5_2_0() { return cParametersParameterParserRuleCall_5_2_0; }
		
		//( "," parameters+=Parameter)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_5_3_1() { return cParametersAssignment_5_3_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_5_3_1_0() { return cParametersParameterParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeParameterTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Parameter returns repository::Parameter:
		//    'Parameter'
		//    name=EString
		//    '{'
		//        'type' type=ParameterType
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Parameter'
		//name=EString
		//'{'
		//    'type' type=ParameterType
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//type=ParameterType
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }
		
		//ParameterType
		public RuleCall getTypeParameterTypeParserRuleCall_4_0() { return cTypeParameterTypeParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ComplexTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ComplexType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComplexTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypesParameterTypeParserRuleCall_4_0 = (RuleCall)cTypesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypesParameterTypeParserRuleCall_5_1_0 = (RuleCall)cTypesAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//ComplexType returns repository::ComplexType:
		//    'ComplexType'
		//    '{'
		//        'types' '{' types+=ParameterType ( "," types+=ParameterType)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ComplexType'
		//'{'
		//    'types' '{' types+=ParameterType ( "," types+=ParameterType)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'ComplexType'
		public Keyword getComplexTypeKeyword_0() { return cComplexTypeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'types'
		public Keyword getTypesKeyword_2() { return cTypesKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//types+=ParameterType
		public Assignment getTypesAssignment_4() { return cTypesAssignment_4; }
		
		//ParameterType
		public RuleCall getTypesParameterTypeParserRuleCall_4_0() { return cTypesParameterTypeParserRuleCall_4_0; }
		
		//( "," types+=ParameterType)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//types+=ParameterType
		public Assignment getTypesAssignment_5_1() { return cTypesAssignment_5_1; }
		
		//ParameterType
		public RuleCall getTypesParameterTypeParserRuleCall_5_1_0() { return cTypesParameterTypeParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class MapTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.MapType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMapTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMapTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//MapType returns repository::MapType:
		//    {repository::MapType}
		//    'MapType'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::MapType}
		//'MapType'
		public Group getGroup() { return cGroup; }
		
		//{repository::MapType}
		public Action getMapTypeAction_0() { return cMapTypeAction_0; }
		
		//'MapType'
		public Keyword getMapTypeKeyword_1() { return cMapTypeKeyword_1; }
	}
	public class StringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.StringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStringTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeEStringParserRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//StringType returns repository::StringType:
		//    {repository::StringType}
		//    'StringType'
		//    '{'
		//        ('type' type=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::StringType}
		//'StringType'
		//'{'
		//    ('type' type=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{repository::StringType}
		public Action getStringTypeAction_0() { return cStringTypeAction_0; }
		
		//'StringType'
		public Keyword getStringTypeKeyword_1() { return cStringTypeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=EString
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_3_1_0() { return cTypeEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class BooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.BooleanType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBooleanTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cTypeTypeKeyword_1_0 = (Keyword)cTypeAssignment_1.eContents().get(0);
		private final Keyword cBooleanTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//BooleanType returns repository::BooleanType:
		//    {repository::BooleanType}
		//    (type?='type')?
		//    'BooleanType'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::BooleanType}
		//(type?='type')?
		//'BooleanType'
		public Group getGroup() { return cGroup; }
		
		//{repository::BooleanType}
		public Action getBooleanTypeAction_0() { return cBooleanTypeAction_0; }
		
		//(type?='type')?
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//'type'
		public Keyword getTypeTypeKeyword_1_0() { return cTypeTypeKeyword_1_0; }
		
		//'BooleanType'
		public Keyword getBooleanTypeKeyword_2() { return cBooleanTypeKeyword_2; }
	}
	public class IntTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.IntType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIntTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeEIntegerObjectParserRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//IntType returns repository::IntType:
		//    {repository::IntType}
		//    'IntType'
		//    '{'
		//        ('type' type=EIntegerObject)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::IntType}
		//'IntType'
		//'{'
		//    ('type' type=EIntegerObject)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{repository::IntType}
		public Action getIntTypeAction_0() { return cIntTypeAction_0; }
		
		//'IntType'
		public Keyword getIntTypeKeyword_1() { return cIntTypeKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('type' type=EIntegerObject)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=EIntegerObject
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//EIntegerObject
		public RuleCall getTypeEIntegerObjectParserRuleCall_3_1_0() { return cTypeEIntegerObjectParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ListTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ListType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cListTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ListType returns repository::ListType:
		//    {repository::ListType}
		//    'ListType'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::ListType}
		//'ListType'
		public Group getGroup() { return cGroup; }
		
		//{repository::ListType}
		public Action getListTypeAction_0() { return cListTypeAction_0; }
		
		//'ListType'
		public Keyword getListTypeKeyword_1() { return cListTypeKeyword_1; }
	}
	public class DateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.DateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDateTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeEDateParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//DateType returns repository::DateType:
		//    'DateType'
		//    '{'
		//        'type' type=EDate
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DateType'
		//'{'
		//    'type' type=EDate
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DateType'
		public Keyword getDateTypeKeyword_0() { return cDateTypeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=EDate
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//EDate
		public RuleCall getTypeEDateParserRuleCall_3_0() { return cTypeEDateParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LongTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.LongType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLongTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeELongObjectParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//LongType returns repository::LongType:
		//    'LongType'
		//    '{'
		//        'type' type=ELongObject
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'LongType'
		//'{'
		//    'type' type=ELongObject
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'LongType'
		public Keyword getLongTypeKeyword_0() { return cLongTypeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=ELongObject
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//ELongObject
		public RuleCall getTypeELongObjectParserRuleCall_3_0() { return cTypeELongObjectParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class FloatTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.FloatType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFloatTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeEFloatObjectParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FloatType returns repository::FloatType:
		//    'FloatType'
		//    '{'
		//        'type' type=EFloatObject
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'FloatType'
		//'{'
		//    'type' type=EFloatObject
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'FloatType'
		public Keyword getFloatTypeKeyword_0() { return cFloatTypeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=EFloatObject
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//EFloatObject
		public RuleCall getTypeEFloatObjectParserRuleCall_3_0() { return cTypeEFloatObjectParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CharTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.CharType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCharTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeECharacterObjectParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CharType returns repository::CharType:
		//    'CharType'
		//    '{'
		//        'type' type=ECharacterObject
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CharType'
		//'{'
		//    'type' type=ECharacterObject
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'CharType'
		public Keyword getCharTypeKeyword_0() { return cCharTypeKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=ECharacterObject
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//ECharacterObject
		public RuleCall getTypeECharacterObjectParserRuleCall_3_0() { return cTypeECharacterObjectParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class VoidTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.VoidType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVoidTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVoidTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//VoidType returns repository::VoidType:
		//    {repository::VoidType}
		//    'VoidType'
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{repository::VoidType}
		//'VoidType'
		public Group getGroup() { return cGroup; }
		
		//{repository::VoidType}
		public Action getVoidTypeAction_0() { return cVoidTypeAction_0; }
		
		//'VoidType'
		public Keyword getVoidTypeKeyword_1() { return cVoidTypeKeyword_1; }
	}
	public class EBooleanObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.EBooleanObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBooleanObject returns ecore::EBooleanObject:
		//    'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class EIntegerObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.EIntegerObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EIntegerObject returns ecore::EIntegerObject:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		//EDate returns ecore::EDate:
		//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'EDate'
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}
	public class ELongObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ELongObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//ELongObject returns ecore::ELongObject:
		//    '-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class EFloatObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.EFloatObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cINTTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_4_0 = (Alternatives)cGroup_4.eContents().get(0);
		private final Keyword cEKeyword_4_0_0 = (Keyword)cAlternatives_4_0.eContents().get(0);
		private final Keyword cEKeyword_4_0_1 = (Keyword)cAlternatives_4_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		
		//EFloatObject returns ecore::EFloatObject:
		//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT? '.' INT (('E'|'e') '-'? INT)?
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT?
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
		
		//'.'
		public Keyword getFullStopKeyword_2() { return cFullStopKeyword_2; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_3() { return cINTTerminalRuleCall_3; }
		
		//(('E'|'e') '-'? INT)?
		public Group getGroup_4() { return cGroup_4; }
		
		//('E'|'e')
		public Alternatives getAlternatives_4_0() { return cAlternatives_4_0; }
		
		//'E'
		public Keyword getEKeyword_4_0_0() { return cEKeyword_4_0_0; }
		
		//'e'
		public Keyword getEKeyword_4_0_1() { return cEKeyword_4_0_1; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_4_1() { return cHyphenMinusKeyword_4_1; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_4_2() { return cINTTerminalRuleCall_4_2; }
	}
	public class ECharacterObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ECharacterObject");
		private final Keyword cECharacterObjectKeyword = (Keyword)rule.eContents().get(1);
		
		//ECharacterObject returns ecore::ECharacterObject:
		//    'ECharacterObject' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'ECharacterObject'
		public Keyword getECharacterObjectKeyword() { return cECharacterObjectKeyword; }
	}
	public class ContainerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Container");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cContainerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cContainerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAllocationContextKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAllocationContextAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cAllocationContextAllocationContextCrossReference_4_2_0 = (CrossReference)cAllocationContextAssignment_4_2.eContents().get(0);
		private final RuleCall cAllocationContextAllocationContextEStringParserRuleCall_4_2_0_1 = (RuleCall)cAllocationContextAllocationContextCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAllocationContextAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cAllocationContextAllocationContextCrossReference_4_3_1_0 = (CrossReference)cAllocationContextAssignment_4_3_1.eContents().get(0);
		private final RuleCall cAllocationContextAllocationContextEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cAllocationContextAllocationContextCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cLinksKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cLinksAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cLinksLinkCrossReference_5_2_0 = (CrossReference)cLinksAssignment_5_2.eContents().get(0);
		private final RuleCall cLinksLinkEStringParserRuleCall_5_2_0_1 = (RuleCall)cLinksLinkCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cLinksAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cLinksLinkCrossReference_5_3_1_0 = (CrossReference)cLinksAssignment_5_3_1.eContents().get(0);
		private final RuleCall cLinksLinkEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cLinksLinkCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Container returns environment::Container:
		//    {environment::Container}
		//    'Container'
		//    name=EString
		//    '{'
		//        ('allocationContext' '(' allocationContext+=[allocation::AllocationContext|EString] ( "," allocationContext+=[allocation::AllocationContext|EString])* ')' )?
		//        ('links' '(' links+=[environment::Link|EString] ( "," links+=[environment::Link|EString])* ')' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{environment::Container}
		//'Container'
		//name=EString
		//'{'
		//    ('allocationContext' '(' allocationContext+=[allocation::AllocationContext|EString] ( "," allocationContext+=[allocation::AllocationContext|EString])* ')' )?
		//    ('links' '(' links+=[environment::Link|EString] ( "," links+=[environment::Link|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{environment::Container}
		public Action getContainerAction_0() { return cContainerAction_0; }
		
		//'Container'
		public Keyword getContainerKeyword_1() { return cContainerKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('allocationContext' '(' allocationContext+=[allocation::AllocationContext|EString] ( "," allocationContext+=[allocation::AllocationContext|EString])* ')' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'allocationContext'
		public Keyword getAllocationContextKeyword_4_0() { return cAllocationContextKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//allocationContext+=[allocation::AllocationContext|EString]
		public Assignment getAllocationContextAssignment_4_2() { return cAllocationContextAssignment_4_2; }
		
		//[allocation::AllocationContext|EString]
		public CrossReference getAllocationContextAllocationContextCrossReference_4_2_0() { return cAllocationContextAllocationContextCrossReference_4_2_0; }
		
		//EString
		public RuleCall getAllocationContextAllocationContextEStringParserRuleCall_4_2_0_1() { return cAllocationContextAllocationContextEStringParserRuleCall_4_2_0_1; }
		
		//( "," allocationContext+=[allocation::AllocationContext|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//allocationContext+=[allocation::AllocationContext|EString]
		public Assignment getAllocationContextAssignment_4_3_1() { return cAllocationContextAssignment_4_3_1; }
		
		//[allocation::AllocationContext|EString]
		public CrossReference getAllocationContextAllocationContextCrossReference_4_3_1_0() { return cAllocationContextAllocationContextCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getAllocationContextAllocationContextEStringParserRuleCall_4_3_1_0_1() { return cAllocationContextAllocationContextEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('links' '(' links+=[environment::Link|EString] ( "," links+=[environment::Link|EString])* ')' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'links'
		public Keyword getLinksKeyword_5_0() { return cLinksKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//links+=[environment::Link|EString]
		public Assignment getLinksAssignment_5_2() { return cLinksAssignment_5_2; }
		
		//[environment::Link|EString]
		public CrossReference getLinksLinkCrossReference_5_2_0() { return cLinksLinkCrossReference_5_2_0; }
		
		//EString
		public RuleCall getLinksLinkEStringParserRuleCall_5_2_0_1() { return cLinksLinkEStringParserRuleCall_5_2_0_1; }
		
		//( "," links+=[environment::Link|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//links+=[environment::Link|EString]
		public Assignment getLinksAssignment_5_3_1() { return cLinksAssignment_5_3_1; }
		
		//[environment::Link|EString]
		public CrossReference getLinksLinkCrossReference_5_3_1_0() { return cLinksLinkCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getLinksLinkEStringParserRuleCall_5_3_1_0_1() { return cLinksLinkEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cContainersKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cContainersAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cContainersContainerCrossReference_5_0 = (CrossReference)cContainersAssignment_5.eContents().get(0);
		private final RuleCall cContainersContainerEStringParserRuleCall_5_0_1 = (RuleCall)cContainersContainerCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cContainersAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cContainersContainerCrossReference_6_1_0 = (CrossReference)cContainersAssignment_6_1.eContents().get(0);
		private final RuleCall cContainersContainerEStringParserRuleCall_6_1_0_1 = (RuleCall)cContainersContainerCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Link returns environment::Link:
		//    'Link'
		//    name=EString
		//    '{'
		//        'containers' '(' containers+=[environment::Container|EString] ( "," containers+=[environment::Container|EString])* ')'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Link'
		//name=EString
		//'{'
		//    'containers' '(' containers+=[environment::Container|EString] ( "," containers+=[environment::Container|EString])* ')'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'containers'
		public Keyword getContainersKeyword_3() { return cContainersKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//containers+=[environment::Container|EString]
		public Assignment getContainersAssignment_5() { return cContainersAssignment_5; }
		
		//[environment::Container|EString]
		public CrossReference getContainersContainerCrossReference_5_0() { return cContainersContainerCrossReference_5_0; }
		
		//EString
		public RuleCall getContainersContainerEStringParserRuleCall_5_0_1() { return cContainersContainerEStringParserRuleCall_5_0_1; }
		
		//( "," containers+=[environment::Container|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//containers+=[environment::Container|EString]
		public Assignment getContainersAssignment_6_1() { return cContainersAssignment_6_1; }
		
		//[environment::Container|EString]
		public CrossReference getContainersContainerCrossReference_6_1_0() { return cContainersContainerCrossReference_6_1_0; }
		
		//EString
		public RuleCall getContainersContainerEStringParserRuleCall_6_1_0_1() { return cContainersContainerEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class AssemblyContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.AssemblyContext");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssemblyContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInstantiatedComponentKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInstantiatedComponentAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cInstantiatedComponentComponentCrossReference_4_0 = (CrossReference)cInstantiatedComponentAssignment_4.eContents().get(0);
		private final RuleCall cInstantiatedComponentComponentEStringParserRuleCall_4_0_1 = (RuleCall)cInstantiatedComponentComponentCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAllocationContextKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAllocationContextAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cAllocationContextAllocationContextCrossReference_5_1_0 = (CrossReference)cAllocationContextAssignment_5_1.eContents().get(0);
		private final RuleCall cAllocationContextAllocationContextEStringParserRuleCall_5_1_0_1 = (RuleCall)cAllocationContextAllocationContextCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cRequiresKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cRequiresAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cRequiresRequiredRoleParserRuleCall_6_2_0 = (RuleCall)cRequiresAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cRequiresAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cRequiresRequiredRoleParserRuleCall_6_3_1_0 = (RuleCall)cRequiresAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cProvidesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cProvidesAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cProvidesProvidedRoleParserRuleCall_7_2_0 = (RuleCall)cProvidesAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cProvidesAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cProvidesProvidedRoleParserRuleCall_7_3_1_0 = (RuleCall)cProvidesAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AssemblyContext returns assembly::AssemblyContext:
		//    'AssemblyContext'
		//    name=EString
		//    '{'
		//        'instantiatedComponent' instantiatedComponent=[repository::Component|EString]
		//        ('allocationContext' allocationContext=[allocation::AllocationContext|EString])?
		//        ('requires' '{' requires+=RequiredRole ( "," requires+=RequiredRole)* '}' )?
		//        ('provides' '{' provides+=ProvidedRole ( "," provides+=ProvidedRole)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'AssemblyContext'
		//name=EString
		//'{'
		//    'instantiatedComponent' instantiatedComponent=[repository::Component|EString]
		//    ('allocationContext' allocationContext=[allocation::AllocationContext|EString])?
		//    ('requires' '{' requires+=RequiredRole ( "," requires+=RequiredRole)* '}' )?
		//    ('provides' '{' provides+=ProvidedRole ( "," provides+=ProvidedRole)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'AssemblyContext'
		public Keyword getAssemblyContextKeyword_0() { return cAssemblyContextKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'instantiatedComponent'
		public Keyword getInstantiatedComponentKeyword_3() { return cInstantiatedComponentKeyword_3; }
		
		//instantiatedComponent=[repository::Component|EString]
		public Assignment getInstantiatedComponentAssignment_4() { return cInstantiatedComponentAssignment_4; }
		
		//[repository::Component|EString]
		public CrossReference getInstantiatedComponentComponentCrossReference_4_0() { return cInstantiatedComponentComponentCrossReference_4_0; }
		
		//EString
		public RuleCall getInstantiatedComponentComponentEStringParserRuleCall_4_0_1() { return cInstantiatedComponentComponentEStringParserRuleCall_4_0_1; }
		
		//('allocationContext' allocationContext=[allocation::AllocationContext|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'allocationContext'
		public Keyword getAllocationContextKeyword_5_0() { return cAllocationContextKeyword_5_0; }
		
		//allocationContext=[allocation::AllocationContext|EString]
		public Assignment getAllocationContextAssignment_5_1() { return cAllocationContextAssignment_5_1; }
		
		//[allocation::AllocationContext|EString]
		public CrossReference getAllocationContextAllocationContextCrossReference_5_1_0() { return cAllocationContextAllocationContextCrossReference_5_1_0; }
		
		//EString
		public RuleCall getAllocationContextAllocationContextEStringParserRuleCall_5_1_0_1() { return cAllocationContextAllocationContextEStringParserRuleCall_5_1_0_1; }
		
		//('requires' '{' requires+=RequiredRole ( "," requires+=RequiredRole)* '}' )?
		public Group getGroup_6() { return cGroup_6; }
		
		//'requires'
		public Keyword getRequiresKeyword_6_0() { return cRequiresKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//requires+=RequiredRole
		public Assignment getRequiresAssignment_6_2() { return cRequiresAssignment_6_2; }
		
		//RequiredRole
		public RuleCall getRequiresRequiredRoleParserRuleCall_6_2_0() { return cRequiresRequiredRoleParserRuleCall_6_2_0; }
		
		//( "," requires+=RequiredRole)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//requires+=RequiredRole
		public Assignment getRequiresAssignment_6_3_1() { return cRequiresAssignment_6_3_1; }
		
		//RequiredRole
		public RuleCall getRequiresRequiredRoleParserRuleCall_6_3_1_0() { return cRequiresRequiredRoleParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('provides' '{' provides+=ProvidedRole ( "," provides+=ProvidedRole)* '}' )?
		public Group getGroup_7() { return cGroup_7; }
		
		//'provides'
		public Keyword getProvidesKeyword_7_0() { return cProvidesKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//provides+=ProvidedRole
		public Assignment getProvidesAssignment_7_2() { return cProvidesAssignment_7_2; }
		
		//ProvidedRole
		public RuleCall getProvidesProvidedRoleParserRuleCall_7_2_0() { return cProvidesProvidedRoleParserRuleCall_7_2_0; }
		
		//( "," provides+=ProvidedRole)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//provides+=ProvidedRole
		public Assignment getProvidesAssignment_7_3_1() { return cProvidesAssignment_7_3_1; }
		
		//ProvidedRole
		public RuleCall getProvidesProvidedRoleParserRuleCall_7_3_1_0() { return cProvidesProvidedRoleParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class AssemblyConnectorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.AssemblyConnector");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAssemblyConnectorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRequiredRoleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRequiredRoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRequiredRoleRequiredRoleCrossReference_3_0 = (CrossReference)cRequiredRoleAssignment_3.eContents().get(0);
		private final RuleCall cRequiredRoleRequiredRoleEStringParserRuleCall_3_0_1 = (RuleCall)cRequiredRoleRequiredRoleCrossReference_3_0.eContents().get(1);
		private final Keyword cProvidedRoleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cProvidedRoleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cProvidedRoleProvidedRoleCrossReference_5_0 = (CrossReference)cProvidedRoleAssignment_5.eContents().get(0);
		private final RuleCall cProvidedRoleProvidedRoleEStringParserRuleCall_5_0_1 = (RuleCall)cProvidedRoleProvidedRoleCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AssemblyConnector returns assembly::AssemblyConnector:
		//    'AssemblyConnector'
		//    '{'
		//        'requiredRole' requiredRole=[assembly::RequiredRole|EString]
		//        'providedRole' providedRole=[assembly::ProvidedRole|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'AssemblyConnector'
		//'{'
		//    'requiredRole' requiredRole=[assembly::RequiredRole|EString]
		//    'providedRole' providedRole=[assembly::ProvidedRole|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'AssemblyConnector'
		public Keyword getAssemblyConnectorKeyword_0() { return cAssemblyConnectorKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'requiredRole'
		public Keyword getRequiredRoleKeyword_2() { return cRequiredRoleKeyword_2; }
		
		//requiredRole=[assembly::RequiredRole|EString]
		public Assignment getRequiredRoleAssignment_3() { return cRequiredRoleAssignment_3; }
		
		//[assembly::RequiredRole|EString]
		public CrossReference getRequiredRoleRequiredRoleCrossReference_3_0() { return cRequiredRoleRequiredRoleCrossReference_3_0; }
		
		//EString
		public RuleCall getRequiredRoleRequiredRoleEStringParserRuleCall_3_0_1() { return cRequiredRoleRequiredRoleEStringParserRuleCall_3_0_1; }
		
		//'providedRole'
		public Keyword getProvidedRoleKeyword_4() { return cProvidedRoleKeyword_4; }
		
		//providedRole=[assembly::ProvidedRole|EString]
		public Assignment getProvidedRoleAssignment_5() { return cProvidedRoleAssignment_5; }
		
		//[assembly::ProvidedRole|EString]
		public CrossReference getProvidedRoleProvidedRoleCrossReference_5_0() { return cProvidedRoleProvidedRoleCrossReference_5_0; }
		
		//EString
		public RuleCall getProvidedRoleProvidedRoleEStringParserRuleCall_5_0_1() { return cProvidedRoleProvidedRoleEStringParserRuleCall_5_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class RequiredRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.RequiredRole");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRequiredRoleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRequiredRoleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDelegationConnectorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDelegationConnectorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDelegationConnectorDelegationConnectorRequiredCrossReference_4_1_0 = (CrossReference)cDelegationConnectorAssignment_4_1.eContents().get(0);
		private final RuleCall cDelegationConnectorDelegationConnectorRequiredEStringParserRuleCall_4_1_0_1 = (RuleCall)cDelegationConnectorDelegationConnectorRequiredCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAssemblyConnectorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssemblyConnectorAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cAssemblyConnectorAssemblyConnectorCrossReference_5_1_0 = (CrossReference)cAssemblyConnectorAssignment_5_1.eContents().get(0);
		private final RuleCall cAssemblyConnectorAssemblyConnectorEStringParserRuleCall_5_1_0_1 = (RuleCall)cAssemblyConnectorAssemblyConnectorCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//RequiredRole returns assembly::RequiredRole:
		//    {assembly::RequiredRole}
		//    'RequiredRole'
		//    name=EString
		//    '{'
		//        ('delegationConnector' delegationConnector=[assembly::DelegationConnectorRequired|EString])?
		//        ('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{assembly::RequiredRole}
		//'RequiredRole'
		//name=EString
		//'{'
		//    ('delegationConnector' delegationConnector=[assembly::DelegationConnectorRequired|EString])?
		//    ('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{assembly::RequiredRole}
		public Action getRequiredRoleAction_0() { return cRequiredRoleAction_0; }
		
		//'RequiredRole'
		public Keyword getRequiredRoleKeyword_1() { return cRequiredRoleKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('delegationConnector' delegationConnector=[assembly::DelegationConnectorRequired|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'delegationConnector'
		public Keyword getDelegationConnectorKeyword_4_0() { return cDelegationConnectorKeyword_4_0; }
		
		//delegationConnector=[assembly::DelegationConnectorRequired|EString]
		public Assignment getDelegationConnectorAssignment_4_1() { return cDelegationConnectorAssignment_4_1; }
		
		//[assembly::DelegationConnectorRequired|EString]
		public CrossReference getDelegationConnectorDelegationConnectorRequiredCrossReference_4_1_0() { return cDelegationConnectorDelegationConnectorRequiredCrossReference_4_1_0; }
		
		//EString
		public RuleCall getDelegationConnectorDelegationConnectorRequiredEStringParserRuleCall_4_1_0_1() { return cDelegationConnectorDelegationConnectorRequiredEStringParserRuleCall_4_1_0_1; }
		
		//('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'assemblyConnector'
		public Keyword getAssemblyConnectorKeyword_5_0() { return cAssemblyConnectorKeyword_5_0; }
		
		//assemblyConnector=[assembly::AssemblyConnector|EString]
		public Assignment getAssemblyConnectorAssignment_5_1() { return cAssemblyConnectorAssignment_5_1; }
		
		//[assembly::AssemblyConnector|EString]
		public CrossReference getAssemblyConnectorAssemblyConnectorCrossReference_5_1_0() { return cAssemblyConnectorAssemblyConnectorCrossReference_5_1_0; }
		
		//EString
		public RuleCall getAssemblyConnectorAssemblyConnectorEStringParserRuleCall_5_1_0_1() { return cAssemblyConnectorAssemblyConnectorEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ProvidedRoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.ProvidedRole");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProvidedRoleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProvidedRoleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDelegationConnectorKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDelegationConnectorAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cDelegationConnectorDelegationConnectorProvidedCrossReference_4_1_0 = (CrossReference)cDelegationConnectorAssignment_4_1.eContents().get(0);
		private final RuleCall cDelegationConnectorDelegationConnectorProvidedEStringParserRuleCall_4_1_0_1 = (RuleCall)cDelegationConnectorDelegationConnectorProvidedCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAssemblyConnectorKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAssemblyConnectorAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cAssemblyConnectorAssemblyConnectorCrossReference_5_1_0 = (CrossReference)cAssemblyConnectorAssignment_5_1.eContents().get(0);
		private final RuleCall cAssemblyConnectorAssemblyConnectorEStringParserRuleCall_5_1_0_1 = (RuleCall)cAssemblyConnectorAssemblyConnectorCrossReference_5_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//ProvidedRole returns assembly::ProvidedRole:
		//    {assembly::ProvidedRole}
		//    'ProvidedRole'
		//    name=EString
		//    '{'
		//        ('delegationConnector' delegationConnector=[assembly::DelegationConnectorProvided|EString])?
		//        ('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{assembly::ProvidedRole}
		//'ProvidedRole'
		//name=EString
		//'{'
		//    ('delegationConnector' delegationConnector=[assembly::DelegationConnectorProvided|EString])?
		//    ('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{assembly::ProvidedRole}
		public Action getProvidedRoleAction_0() { return cProvidedRoleAction_0; }
		
		//'ProvidedRole'
		public Keyword getProvidedRoleKeyword_1() { return cProvidedRoleKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('delegationConnector' delegationConnector=[assembly::DelegationConnectorProvided|EString])?
		public Group getGroup_4() { return cGroup_4; }
		
		//'delegationConnector'
		public Keyword getDelegationConnectorKeyword_4_0() { return cDelegationConnectorKeyword_4_0; }
		
		//delegationConnector=[assembly::DelegationConnectorProvided|EString]
		public Assignment getDelegationConnectorAssignment_4_1() { return cDelegationConnectorAssignment_4_1; }
		
		//[assembly::DelegationConnectorProvided|EString]
		public CrossReference getDelegationConnectorDelegationConnectorProvidedCrossReference_4_1_0() { return cDelegationConnectorDelegationConnectorProvidedCrossReference_4_1_0; }
		
		//EString
		public RuleCall getDelegationConnectorDelegationConnectorProvidedEStringParserRuleCall_4_1_0_1() { return cDelegationConnectorDelegationConnectorProvidedEStringParserRuleCall_4_1_0_1; }
		
		//('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
		public Group getGroup_5() { return cGroup_5; }
		
		//'assemblyConnector'
		public Keyword getAssemblyConnectorKeyword_5_0() { return cAssemblyConnectorKeyword_5_0; }
		
		//assemblyConnector=[assembly::AssemblyConnector|EString]
		public Assignment getAssemblyConnectorAssignment_5_1() { return cAssemblyConnectorAssignment_5_1; }
		
		//[assembly::AssemblyConnector|EString]
		public CrossReference getAssemblyConnectorAssemblyConnectorCrossReference_5_1_0() { return cAssemblyConnectorAssemblyConnectorCrossReference_5_1_0; }
		
		//EString
		public RuleCall getAssemblyConnectorAssemblyConnectorEStringParserRuleCall_5_1_0_1() { return cAssemblyConnectorAssemblyConnectorEStringParserRuleCall_5_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DelegationConnectorRequiredElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.DelegationConnectorRequired");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDelegationConnectorRequiredKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLinkedInterfaceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLinkedInterfaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLinkedInterfaceInterfaceCrossReference_3_0 = (CrossReference)cLinkedInterfaceAssignment_3.eContents().get(0);
		private final RuleCall cLinkedInterfaceInterfaceEStringParserRuleCall_3_0_1 = (RuleCall)cLinkedInterfaceInterfaceCrossReference_3_0.eContents().get(1);
		private final Keyword cLinkedRoleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLinkedRoleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cLinkedRoleRequiredRoleCrossReference_5_0 = (CrossReference)cLinkedRoleAssignment_5.eContents().get(0);
		private final RuleCall cLinkedRoleRequiredRoleEStringParserRuleCall_5_0_1 = (RuleCall)cLinkedRoleRequiredRoleCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DelegationConnectorRequired returns assembly::DelegationConnectorRequired:
		//    'DelegationConnectorRequired'
		//    '{'
		//        'linkedInterface' linkedInterface=[repository::Interface|EString]
		//        'linkedRole' linkedRole=[assembly::RequiredRole|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DelegationConnectorRequired'
		//'{'
		//    'linkedInterface' linkedInterface=[repository::Interface|EString]
		//    'linkedRole' linkedRole=[assembly::RequiredRole|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DelegationConnectorRequired'
		public Keyword getDelegationConnectorRequiredKeyword_0() { return cDelegationConnectorRequiredKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'linkedInterface'
		public Keyword getLinkedInterfaceKeyword_2() { return cLinkedInterfaceKeyword_2; }
		
		//linkedInterface=[repository::Interface|EString]
		public Assignment getLinkedInterfaceAssignment_3() { return cLinkedInterfaceAssignment_3; }
		
		//[repository::Interface|EString]
		public CrossReference getLinkedInterfaceInterfaceCrossReference_3_0() { return cLinkedInterfaceInterfaceCrossReference_3_0; }
		
		//EString
		public RuleCall getLinkedInterfaceInterfaceEStringParserRuleCall_3_0_1() { return cLinkedInterfaceInterfaceEStringParserRuleCall_3_0_1; }
		
		//'linkedRole'
		public Keyword getLinkedRoleKeyword_4() { return cLinkedRoleKeyword_4; }
		
		//linkedRole=[assembly::RequiredRole|EString]
		public Assignment getLinkedRoleAssignment_5() { return cLinkedRoleAssignment_5; }
		
		//[assembly::RequiredRole|EString]
		public CrossReference getLinkedRoleRequiredRoleCrossReference_5_0() { return cLinkedRoleRequiredRoleCrossReference_5_0; }
		
		//EString
		public RuleCall getLinkedRoleRequiredRoleEStringParserRuleCall_5_0_1() { return cLinkedRoleRequiredRoleEStringParserRuleCall_5_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class DelegationConnectorProvidedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "kit.mdsd.xtext.dsl.Dsl.DelegationConnectorProvided");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDelegationConnectorProvidedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLinkedInterfaceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLinkedInterfaceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLinkedInterfaceInterfaceCrossReference_3_0 = (CrossReference)cLinkedInterfaceAssignment_3.eContents().get(0);
		private final RuleCall cLinkedInterfaceInterfaceEStringParserRuleCall_3_0_1 = (RuleCall)cLinkedInterfaceInterfaceCrossReference_3_0.eContents().get(1);
		private final Keyword cLinkdedRoleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLinkdedRoleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cLinkdedRoleProvidedRoleCrossReference_5_0 = (CrossReference)cLinkdedRoleAssignment_5.eContents().get(0);
		private final RuleCall cLinkdedRoleProvidedRoleEStringParserRuleCall_5_0_1 = (RuleCall)cLinkdedRoleProvidedRoleCrossReference_5_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//DelegationConnectorProvided returns assembly::DelegationConnectorProvided:
		//    'DelegationConnectorProvided'
		//    '{'
		//        'linkedInterface' linkedInterface=[repository::Interface|EString]
		//        'linkdedRole' linkdedRole=[assembly::ProvidedRole|EString]
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'DelegationConnectorProvided'
		//'{'
		//    'linkedInterface' linkedInterface=[repository::Interface|EString]
		//    'linkdedRole' linkdedRole=[assembly::ProvidedRole|EString]
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'DelegationConnectorProvided'
		public Keyword getDelegationConnectorProvidedKeyword_0() { return cDelegationConnectorProvidedKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'linkedInterface'
		public Keyword getLinkedInterfaceKeyword_2() { return cLinkedInterfaceKeyword_2; }
		
		//linkedInterface=[repository::Interface|EString]
		public Assignment getLinkedInterfaceAssignment_3() { return cLinkedInterfaceAssignment_3; }
		
		//[repository::Interface|EString]
		public CrossReference getLinkedInterfaceInterfaceCrossReference_3_0() { return cLinkedInterfaceInterfaceCrossReference_3_0; }
		
		//EString
		public RuleCall getLinkedInterfaceInterfaceEStringParserRuleCall_3_0_1() { return cLinkedInterfaceInterfaceEStringParserRuleCall_3_0_1; }
		
		//'linkdedRole'
		public Keyword getLinkdedRoleKeyword_4() { return cLinkdedRoleKeyword_4; }
		
		//linkdedRole=[assembly::ProvidedRole|EString]
		public Assignment getLinkdedRoleAssignment_5() { return cLinkdedRoleAssignment_5; }
		
		//[assembly::ProvidedRole|EString]
		public CrossReference getLinkdedRoleProvidedRoleCrossReference_5_0() { return cLinkdedRoleProvidedRoleCrossReference_5_0; }
		
		//EString
		public RuleCall getLinkdedRoleProvidedRoleEStringParserRuleCall_5_0_1() { return cLinkdedRoleProvidedRoleEStringParserRuleCall_5_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	
	
	private final ComponentBasedSystemElements pComponentBasedSystem;
	private final DelegationConnectorElements pDelegationConnector;
	private final TypeElements pType;
	private final ParameterTypeElements pParameterType;
	private final RepositoryElements pRepository;
	private final EnvironmentElements pEnvironment;
	private final SystemElements pSystem;
	private final AllocationContextElements pAllocationContext;
	private final ComponentElements pComponent;
	private final CompositeComponentElements pCompositeComponent;
	private final InterfaceElements pInterface;
	private final EStringElements pEString;
	private final BehaviourDescriptionElements pBehaviourDescription;
	private final InternalActionElements pInternalAction;
	private final ExternalCallElements pExternalCall;
	private final LoopElements pLoop;
	private final BranchElements pBranch;
	private final SignatureElements pSignature;
	private final ParameterElements pParameter;
	private final ComplexTypeElements pComplexType;
	private final MapTypeElements pMapType;
	private final StringTypeElements pStringType;
	private final BooleanTypeElements pBooleanType;
	private final IntTypeElements pIntType;
	private final ListTypeElements pListType;
	private final DateTypeElements pDateType;
	private final LongTypeElements pLongType;
	private final FloatTypeElements pFloatType;
	private final CharTypeElements pCharType;
	private final VoidTypeElements pVoidType;
	private final EBooleanObjectElements pEBooleanObject;
	private final EIntegerObjectElements pEIntegerObject;
	private final EDateElements pEDate;
	private final ELongObjectElements pELongObject;
	private final EFloatObjectElements pEFloatObject;
	private final ECharacterObjectElements pECharacterObject;
	private final ContainerElements pContainer;
	private final LinkElements pLink;
	private final AssemblyContextElements pAssemblyContext;
	private final AssemblyConnectorElements pAssemblyConnector;
	private final RequiredRoleElements pRequiredRole;
	private final ProvidedRoleElements pProvidedRole;
	private final DelegationConnectorRequiredElements pDelegationConnectorRequired;
	private final DelegationConnectorProvidedElements pDelegationConnectorProvided;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pComponentBasedSystem = new ComponentBasedSystemElements();
		this.pDelegationConnector = new DelegationConnectorElements();
		this.pType = new TypeElements();
		this.pParameterType = new ParameterTypeElements();
		this.pRepository = new RepositoryElements();
		this.pEnvironment = new EnvironmentElements();
		this.pSystem = new SystemElements();
		this.pAllocationContext = new AllocationContextElements();
		this.pComponent = new ComponentElements();
		this.pCompositeComponent = new CompositeComponentElements();
		this.pInterface = new InterfaceElements();
		this.pEString = new EStringElements();
		this.pBehaviourDescription = new BehaviourDescriptionElements();
		this.pInternalAction = new InternalActionElements();
		this.pExternalCall = new ExternalCallElements();
		this.pLoop = new LoopElements();
		this.pBranch = new BranchElements();
		this.pSignature = new SignatureElements();
		this.pParameter = new ParameterElements();
		this.pComplexType = new ComplexTypeElements();
		this.pMapType = new MapTypeElements();
		this.pStringType = new StringTypeElements();
		this.pBooleanType = new BooleanTypeElements();
		this.pIntType = new IntTypeElements();
		this.pListType = new ListTypeElements();
		this.pDateType = new DateTypeElements();
		this.pLongType = new LongTypeElements();
		this.pFloatType = new FloatTypeElements();
		this.pCharType = new CharTypeElements();
		this.pVoidType = new VoidTypeElements();
		this.pEBooleanObject = new EBooleanObjectElements();
		this.pEIntegerObject = new EIntegerObjectElements();
		this.pEDate = new EDateElements();
		this.pELongObject = new ELongObjectElements();
		this.pEFloatObject = new EFloatObjectElements();
		this.pECharacterObject = new ECharacterObjectElements();
		this.pContainer = new ContainerElements();
		this.pLink = new LinkElements();
		this.pAssemblyContext = new AssemblyContextElements();
		this.pAssemblyConnector = new AssemblyConnectorElements();
		this.pRequiredRole = new RequiredRoleElements();
		this.pProvidedRole = new ProvidedRoleElements();
		this.pDelegationConnectorRequired = new DelegationConnectorRequiredElements();
		this.pDelegationConnectorProvided = new DelegationConnectorProvidedElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("kit.mdsd.xtext.dsl.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ComponentBasedSystem returns metaModel::ComponentBasedSystem:
	//    {metaModel::ComponentBasedSystem}
	//    'ComponentBasedSystem'
	//    '{'
	//        ('repositories' '{' repositories+=Repository ( "," repositories+=Repository)* '}' )?
	//        ('environments' '{' environments+=Environment ( "," environments+=Environment)* '}' )?
	//        ('systems' '{' systems+=System ( "," systems+=System)* '}' )?
	//        ('allocationContexts' '{' allocationContexts+=AllocationContext ( "," allocationContexts+=AllocationContext)* '}' )?
	//    '}';
	public ComponentBasedSystemElements getComponentBasedSystemAccess() {
		return pComponentBasedSystem;
	}
	
	public ParserRule getComponentBasedSystemRule() {
		return getComponentBasedSystemAccess().getRule();
	}
	
	//DelegationConnector returns assembly::DelegationConnector:
	//    DelegationConnectorRequired | DelegationConnectorProvided;
	public DelegationConnectorElements getDelegationConnectorAccess() {
		return pDelegationConnector;
	}
	
	public ParserRule getDelegationConnectorRule() {
		return getDelegationConnectorAccess().getRule();
	}
	
	//Type returns repository::Type:
	//    ComplexType | MapType | StringType | BooleanType | IntType | ListType | DateType | LongType | FloatType | CharType | VoidType;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//ParameterType returns repository::ParameterType:
	//    ComplexType | MapType | StringType | BooleanType | IntType | ListType | DateType | LongType | FloatType | CharType;
	public ParameterTypeElements getParameterTypeAccess() {
		return pParameterType;
	}
	
	public ParserRule getParameterTypeRule() {
		return getParameterTypeAccess().getRule();
	}
	
	//Repository returns repository::Repository:
	//    {repository::Repository}
	//    'Repository'
	//    '{'
	//        ('components' '{' components+=Component ( "," components+=Component)* '}' )?
	//        ('interfaces' '{' interfaces+=Interface ( "," interfaces+=Interface)* '}' )?
	//    '}';
	public RepositoryElements getRepositoryAccess() {
		return pRepository;
	}
	
	public ParserRule getRepositoryRule() {
		return getRepositoryAccess().getRule();
	}
	
	//Environment returns environment::Environment:
	//    {environment::Environment}
	//    'Environment'
	//    '{'
	//        ('container' '{' containers+=Container ( "," containers+=Container)* '}' )?
	//        ('link' '{' links+=Link ( "," links+=Link)* '}' )?
	//    '}';
	public EnvironmentElements getEnvironmentAccess() {
		return pEnvironment;
	}
	
	public ParserRule getEnvironmentRule() {
		return getEnvironmentAccess().getRule();
	}
	
	//System returns assembly::System:
	//    'System'
	//    '{'
	//        'provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')'
	//        'encapsulatedInstances' '{' encapsulatedInstances+=AssemblyContext ( "," encapsulatedInstances+=AssemblyContext)* '}'
	//        ('delegationConnectors' '{' delegationConnectors+=DelegationConnector ( "," delegationConnectors+=DelegationConnector)* '}' )?
	//        ('assemblyConnectors' '{' assemblyConnectors+=AssemblyConnector ( "," assemblyConnectors+=AssemblyConnector)* '}' )?
	//    '}';
	public SystemElements getSystemAccess() {
		return pSystem;
	}
	
	public ParserRule getSystemRule() {
		return getSystemAccess().getRule();
	}
	
	//AllocationContext returns allocation::AllocationContext:
	//    'AllocationContext'
	//    name=EString
	//    '{'
	//        'assemblyContext' assemblyContext=[assembly::AssemblyContext|EString]
	//        'container' container=[environment::Container|EString]
	//    '}';
	public AllocationContextElements getAllocationContextAccess() {
		return pAllocationContext;
	}
	
	public ParserRule getAllocationContextRule() {
		return getAllocationContextAccess().getRule();
	}
	
	//Component returns repository::Component:
	//    {repository::Component}
	//    'Component'
	//    name=EString
	//    '{'
	//        ('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
	//        ('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
	//        ('description' description=BehaviourDescription)?
	//    '}' | CompositeComponent;
	public ComponentElements getComponentAccess() {
		return pComponent;
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}
	
	//CompositeComponent returns assembly::CompositeComponent:
	//    {assembly::CompositeComponent}
	//    'CompositeComponent'
	//    name=EString
	//    '{'
	//        ('requires' '(' requires+=[repository::Interface|EString] ( "," requires+=[repository::Interface|EString])* ')' )?
	//        ('provides' '(' provides+=[repository::Interface|EString] ( "," provides+=[repository::Interface|EString])* ')' )?
	//        ('description' description=BehaviourDescription)?
	//        ('encapsulatedInstances' '(' encapsulatedInstances+=[assembly::AssemblyContext|EString] ( "," encapsulatedInstances+=[assembly::AssemblyContext|EString])* ')')?
	//    '}';
	public CompositeComponentElements getCompositeComponentAccess() {
		return pCompositeComponent;
	}
	
	public ParserRule getCompositeComponentRule() {
		return getCompositeComponentAccess().getRule();
	}
	
	//Interface returns repository::Interface:
	//    {repository::Interface}
	//    'Interface'
	//    name=EString
	//    '{'
	//        ('signatures' '{' signatures+=Signature ( "," signatures+=Signature)* '}' )?
	//    '}';
	public InterfaceElements getInterfaceAccess() {
		return pInterface;
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//BehaviourDescription returns repository::BehaviourDescription:
	//    {repository::BehaviourDescription}
	//    'BehaviourDescription'
	//    '{'
	//        ('internalActions' '{' internalActions+=InternalAction ( "," internalActions+=InternalAction)* '}' )?
	//        ('externalCalls' '{' externalCalls+=ExternalCall ( "," externalCalls+=ExternalCall)* '}' )?
	//        ('loops' '{' loops+=Loop ( "," loops+=Loop)* '}' )?
	//        ('branches' '{' branches+=Branch ( "," branches+=Branch)* '}' )?
	//    '}';
	public BehaviourDescriptionElements getBehaviourDescriptionAccess() {
		return pBehaviourDescription;
	}
	
	public ParserRule getBehaviourDescriptionRule() {
		return getBehaviourDescriptionAccess().getRule();
	}
	
	//InternalAction returns repository::InternalAction:
	//    {repository::InternalAction}
	//    'InternalAction'
	//    ;
	public InternalActionElements getInternalActionAccess() {
		return pInternalAction;
	}
	
	public ParserRule getInternalActionRule() {
		return getInternalActionAccess().getRule();
	}
	
	//ExternalCall returns repository::ExternalCall:
	//    {repository::ExternalCall}
	//    'ExternalCall'
	//    ;
	public ExternalCallElements getExternalCallAccess() {
		return pExternalCall;
	}
	
	public ParserRule getExternalCallRule() {
		return getExternalCallAccess().getRule();
	}
	
	//Loop returns repository::Loop:
	//    {repository::Loop}
	//    'Loop'
	//    ;
	public LoopElements getLoopAccess() {
		return pLoop;
	}
	
	public ParserRule getLoopRule() {
		return getLoopAccess().getRule();
	}
	
	//Branch returns repository::Branch:
	//    {repository::Branch}
	//    'Branch'
	//    ;
	public BranchElements getBranchAccess() {
		return pBranch;
	}
	
	public ParserRule getBranchRule() {
		return getBranchAccess().getRule();
	}
	
	//Signature returns repository::Signature:
	//    'Signature'
	//    name=EString
	//    '{'
	//        'returnType' returnType=Type
	//        ('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
	//    '}';
	public SignatureElements getSignatureAccess() {
		return pSignature;
	}
	
	public ParserRule getSignatureRule() {
		return getSignatureAccess().getRule();
	}
	
	//Parameter returns repository::Parameter:
	//    'Parameter'
	//    name=EString
	//    '{'
	//        'type' type=ParameterType
	//    '}';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ComplexType returns repository::ComplexType:
	//    'ComplexType'
	//    '{'
	//        'types' '{' types+=ParameterType ( "," types+=ParameterType)* '}'
	//    '}';
	public ComplexTypeElements getComplexTypeAccess() {
		return pComplexType;
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}
	
	//MapType returns repository::MapType:
	//    {repository::MapType}
	//    'MapType'
	//    ;
	public MapTypeElements getMapTypeAccess() {
		return pMapType;
	}
	
	public ParserRule getMapTypeRule() {
		return getMapTypeAccess().getRule();
	}
	
	//StringType returns repository::StringType:
	//    {repository::StringType}
	//    'StringType'
	//    '{'
	//        ('type' type=EString)?
	//    '}';
	public StringTypeElements getStringTypeAccess() {
		return pStringType;
	}
	
	public ParserRule getStringTypeRule() {
		return getStringTypeAccess().getRule();
	}
	
	//BooleanType returns repository::BooleanType:
	//    {repository::BooleanType}
	//    (type?='type')?
	//    'BooleanType'
	//    ;
	public BooleanTypeElements getBooleanTypeAccess() {
		return pBooleanType;
	}
	
	public ParserRule getBooleanTypeRule() {
		return getBooleanTypeAccess().getRule();
	}
	
	//IntType returns repository::IntType:
	//    {repository::IntType}
	//    'IntType'
	//    '{'
	//        ('type' type=EIntegerObject)?
	//    '}';
	public IntTypeElements getIntTypeAccess() {
		return pIntType;
	}
	
	public ParserRule getIntTypeRule() {
		return getIntTypeAccess().getRule();
	}
	
	//ListType returns repository::ListType:
	//    {repository::ListType}
	//    'ListType'
	//    ;
	public ListTypeElements getListTypeAccess() {
		return pListType;
	}
	
	public ParserRule getListTypeRule() {
		return getListTypeAccess().getRule();
	}
	
	//DateType returns repository::DateType:
	//    'DateType'
	//    '{'
	//        'type' type=EDate
	//    '}';
	public DateTypeElements getDateTypeAccess() {
		return pDateType;
	}
	
	public ParserRule getDateTypeRule() {
		return getDateTypeAccess().getRule();
	}
	
	//LongType returns repository::LongType:
	//    'LongType'
	//    '{'
	//        'type' type=ELongObject
	//    '}';
	public LongTypeElements getLongTypeAccess() {
		return pLongType;
	}
	
	public ParserRule getLongTypeRule() {
		return getLongTypeAccess().getRule();
	}
	
	//FloatType returns repository::FloatType:
	//    'FloatType'
	//    '{'
	//        'type' type=EFloatObject
	//    '}';
	public FloatTypeElements getFloatTypeAccess() {
		return pFloatType;
	}
	
	public ParserRule getFloatTypeRule() {
		return getFloatTypeAccess().getRule();
	}
	
	//CharType returns repository::CharType:
	//    'CharType'
	//    '{'
	//        'type' type=ECharacterObject
	//    '}';
	public CharTypeElements getCharTypeAccess() {
		return pCharType;
	}
	
	public ParserRule getCharTypeRule() {
		return getCharTypeAccess().getRule();
	}
	
	//VoidType returns repository::VoidType:
	//    {repository::VoidType}
	//    'VoidType'
	//    ;
	public VoidTypeElements getVoidTypeAccess() {
		return pVoidType;
	}
	
	public ParserRule getVoidTypeRule() {
		return getVoidTypeAccess().getRule();
	}
	
	//EBooleanObject returns ecore::EBooleanObject:
	//    'true' | 'false';
	public EBooleanObjectElements getEBooleanObjectAccess() {
		return pEBooleanObject;
	}
	
	public ParserRule getEBooleanObjectRule() {
		return getEBooleanObjectAccess().getRule();
	}
	
	//EIntegerObject returns ecore::EIntegerObject:
	//    '-'? INT;
	public EIntegerObjectElements getEIntegerObjectAccess() {
		return pEIntegerObject;
	}
	
	public ParserRule getEIntegerObjectRule() {
		return getEIntegerObjectAccess().getRule();
	}
	
	//EDate returns ecore::EDate:
	//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//ELongObject returns ecore::ELongObject:
	//    '-'? INT;
	public ELongObjectElements getELongObjectAccess() {
		return pELongObject;
	}
	
	public ParserRule getELongObjectRule() {
		return getELongObjectAccess().getRule();
	}
	
	//EFloatObject returns ecore::EFloatObject:
	//    '-'? INT? '.' INT (('E'|'e') '-'? INT)?;
	public EFloatObjectElements getEFloatObjectAccess() {
		return pEFloatObject;
	}
	
	public ParserRule getEFloatObjectRule() {
		return getEFloatObjectAccess().getRule();
	}
	
	//ECharacterObject returns ecore::ECharacterObject:
	//    'ECharacterObject' /* TODO: implement this rule and an appropriate IValueConverter */;
	public ECharacterObjectElements getECharacterObjectAccess() {
		return pECharacterObject;
	}
	
	public ParserRule getECharacterObjectRule() {
		return getECharacterObjectAccess().getRule();
	}
	
	//Container returns environment::Container:
	//    {environment::Container}
	//    'Container'
	//    name=EString
	//    '{'
	//        ('allocationContext' '(' allocationContext+=[allocation::AllocationContext|EString] ( "," allocationContext+=[allocation::AllocationContext|EString])* ')' )?
	//        ('links' '(' links+=[environment::Link|EString] ( "," links+=[environment::Link|EString])* ')' )?
	//    '}';
	public ContainerElements getContainerAccess() {
		return pContainer;
	}
	
	public ParserRule getContainerRule() {
		return getContainerAccess().getRule();
	}
	
	//Link returns environment::Link:
	//    'Link'
	//    name=EString
	//    '{'
	//        'containers' '(' containers+=[environment::Container|EString] ( "," containers+=[environment::Container|EString])* ')'
	//    '}';
	public LinkElements getLinkAccess() {
		return pLink;
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}
	
	//AssemblyContext returns assembly::AssemblyContext:
	//    'AssemblyContext'
	//    name=EString
	//    '{'
	//        'instantiatedComponent' instantiatedComponent=[repository::Component|EString]
	//        ('allocationContext' allocationContext=[allocation::AllocationContext|EString])?
	//        ('requires' '{' requires+=RequiredRole ( "," requires+=RequiredRole)* '}' )?
	//        ('provides' '{' provides+=ProvidedRole ( "," provides+=ProvidedRole)* '}' )?
	//    '}';
	public AssemblyContextElements getAssemblyContextAccess() {
		return pAssemblyContext;
	}
	
	public ParserRule getAssemblyContextRule() {
		return getAssemblyContextAccess().getRule();
	}
	
	//AssemblyConnector returns assembly::AssemblyConnector:
	//    'AssemblyConnector'
	//    '{'
	//        'requiredRole' requiredRole=[assembly::RequiredRole|EString]
	//        'providedRole' providedRole=[assembly::ProvidedRole|EString]
	//    '}';
	public AssemblyConnectorElements getAssemblyConnectorAccess() {
		return pAssemblyConnector;
	}
	
	public ParserRule getAssemblyConnectorRule() {
		return getAssemblyConnectorAccess().getRule();
	}
	
	//RequiredRole returns assembly::RequiredRole:
	//    {assembly::RequiredRole}
	//    'RequiredRole'
	//    name=EString
	//    '{'
	//        ('delegationConnector' delegationConnector=[assembly::DelegationConnectorRequired|EString])?
	//        ('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
	//    '}';
	public RequiredRoleElements getRequiredRoleAccess() {
		return pRequiredRole;
	}
	
	public ParserRule getRequiredRoleRule() {
		return getRequiredRoleAccess().getRule();
	}
	
	//ProvidedRole returns assembly::ProvidedRole:
	//    {assembly::ProvidedRole}
	//    'ProvidedRole'
	//    name=EString
	//    '{'
	//        ('delegationConnector' delegationConnector=[assembly::DelegationConnectorProvided|EString])?
	//        ('assemblyConnector' assemblyConnector=[assembly::AssemblyConnector|EString])?
	//    '}';
	public ProvidedRoleElements getProvidedRoleAccess() {
		return pProvidedRole;
	}
	
	public ParserRule getProvidedRoleRule() {
		return getProvidedRoleAccess().getRule();
	}
	
	//DelegationConnectorRequired returns assembly::DelegationConnectorRequired:
	//    'DelegationConnectorRequired'
	//    '{'
	//        'linkedInterface' linkedInterface=[repository::Interface|EString]
	//        'linkedRole' linkedRole=[assembly::RequiredRole|EString]
	//    '}';
	public DelegationConnectorRequiredElements getDelegationConnectorRequiredAccess() {
		return pDelegationConnectorRequired;
	}
	
	public ParserRule getDelegationConnectorRequiredRule() {
		return getDelegationConnectorRequiredAccess().getRule();
	}
	
	//DelegationConnectorProvided returns assembly::DelegationConnectorProvided:
	//    'DelegationConnectorProvided'
	//    '{'
	//        'linkedInterface' linkedInterface=[repository::Interface|EString]
	//        'linkdedRole' linkdedRole=[assembly::ProvidedRole|EString]
	//    '}';
	public DelegationConnectorProvidedElements getDelegationConnectorProvidedAccess() {
		return pDelegationConnectorProvided;
	}
	
	public ParserRule getDelegationConnectorProvidedRule() {
		return getDelegationConnectorProvidedAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
