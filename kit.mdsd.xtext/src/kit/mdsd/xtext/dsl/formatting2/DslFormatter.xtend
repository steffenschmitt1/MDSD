/*
 * generated by Xtext 2.30.0
 */
package kit.mdsd.xtext.dsl.formatting2

import com.google.inject.Inject
import kit.mdsd.xtext.dsl.services.DslGrammarAccess
import metaModel.ComponentBasedSystem
import metaModel.viewType.repository.Repository
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class DslFormatter extends AbstractFormatter2 {
	
	@Inject extension DslGrammarAccess

	def dispatch void format(ComponentBasedSystem componentBasedSystem, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (repository : componentBasedSystem.repositories) {
			repository.format
		}
		for (environment : componentBasedSystem.environments) {
			environment.format
		}
		for (system : componentBasedSystem.systems) {
			system.format
		}
		for (allocationContext : componentBasedSystem.allocationContexts) {
			allocationContext.format
		}
	}

	def dispatch void format(Repository repository, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (component : repository.components) {
			component.format
		}
		for (_interface : repository.interfaces) {
			_interface.format
		}
	}
	
	// TODO: implement for Environment, System, Component, CompositeComponent, Interface, BehaviourDescription, Signature, Parameter, ComplexType, AssemblyContext
}
