library TransformationMappingLibrary;

modeltype CBS uses "http://metaModel";
modeltype PCM uses "http://palladiosimulator.org/PalladioComponentModel/5.2";


abstract mapping CBS::viewType::NamedElement::mapNamedElement() : PCM::core::entity::NamedElement {
	entityName := self.name;
}


mapping CBS::viewType::repository::Repository::mapRepo() : PCM::repository::Repository inherits CBS::viewType::NamedElement::mapNamedElement {
	interfaces__Repository := self.interfaces -> mapInterface();
	components__Repository := self.components -> mapComponent();

}

mapping CBS::viewType::repository::Component::mapComponent() : PCM::repository::ImplementationComponentType 
disjuncts CBS::viewType::assembly::CompositeComponent::mapCompositeComponent, CBS::viewType::repository::Component::mapSimpleComponent;

mapping CBS::viewType::repository::Component::mapSimpleComponent() : PCM::repository::BasicComponent inherits CBS::viewType::NamedElement::mapNamedElement{
	--Use ResDemanding SEFF because it's not abstract
	serviceEffectSpecifications__BasicComponent := self.description -> mapBehaviorToSeff();
}

mapping CBS::viewType::assembly::CompositeComponent::mapCompositeComponent() : PCM::repository::CompositeComponent inherits CBS::viewType::NamedElement::mapNamedElement{
	assemblyContexts__ComposedStructure := self.encapsulatedInstances -> mapAssemblyContext();
	
}
 

mapping CBS::viewType::repository::BehaviourDescription::mapBehaviorToSeff() : PCM::seff::ResourceDemandingSEFF {
	
}

mapping CBS::viewType::repository::InternalAction::mapInternalAction() : PCM::seff::InternalAction{}
mapping CBS::viewType::repository::Loop::mapLoop() : PCM::seff::LoopAction{}
mapping CBS::viewType::repository::ExternalCall::mapExternalCall() : PCM::seff::ExternalCallAction{}
mapping CBS::viewType::repository::Branch::mapBranch() : PCM::seff::BranchAction{}

mapping CBS::viewType::assembly::AssemblyContext::mapAssemblyContext() : PCM::core::composition::AssemblyContext inherits CBS::viewType::NamedElement::mapNamedElement {
	encapsulatedComponent__AssemblyContext := self.instantiatedComponent.late resolveone(PCM::repository::RepositoryComponent);
}

mapping CBS::viewType::repository::Interface::mapInterface() : PCM::repository::OperationInterface inherits CBS::viewType::NamedElement::mapNamedElement {
	signatures__OperationInterface := self.signatures -> map mapSignature();
}

mapping CBS::viewType::repository::Signature::mapSignature() : PCM::repository::OperationSignature inherits CBS::viewType::NamedElement::mapNamedElement {
	parameters__OperationSignature := self.parameters -> map mapParameter() -> asSet();
	returnType__OperationSignature := self.returnType.resolveone(PCM::repository::DataType);	
}



mapping CBS::viewType::repository::Parameter::mapParameter() : PCM::repository::Parameter {
    switch {
    	//primitives
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::StringType)) {
    		dataType__Parameter := object PCM::repository::PrimitiveDataType {
    			type := PCM::repository::PrimitiveTypeEnum::STRING;
    		};
    	}
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::BooleanType)) {
    		dataType__Parameter := object PCM::repository::PrimitiveDataType {
    			type := PCM::repository::PrimitiveTypeEnum::BOOL;
    		};
    	}
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::IntType)) {
    		dataType__Parameter := object PCM::repository::PrimitiveDataType {
    			type := PCM::repository::PrimitiveTypeEnum::INT;
    		};
    	}
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::LongType)) {
    		dataType__Parameter := object PCM::repository::PrimitiveDataType {
    			type := PCM::repository::PrimitiveTypeEnum::LONG;
    		};
    	}
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::FloatType)) {
    		dataType__Parameter := object PCM::repository::PrimitiveDataType {
    			type := PCM::repository::PrimitiveTypeEnum::DOUBLE;
    		};
    	}
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::CharType)) {
    		dataType__Parameter := object PCM::repository::PrimitiveDataType {
    			type := PCM::repository::PrimitiveTypeEnum::CHAR;
    		};
    	}
    	// collections
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::ListType)) {
    		dataType__Parameter := object PCM::repository::CollectionDataType {};
    	}
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::MapType)) {
    		dataType__Parameter := object PCM::repository::CollectionDataType {};

    	}
    	// no date in palladio, use string
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::DateType)) {
    		dataType__Parameter := object PCM::repository::PrimitiveDataType {
    			type := PCM::repository::PrimitiveTypeEnum::STRING;
    		};
    	}
    	// no void in palladio, use null
    	case(self.type.oclIsTypeOf(CBS::viewType::repository::VoidType)) {
    		dataType__Parameter := null;
    	}
    }
}

//Assembly


//Valerii
abstract mapping CBS::viewType::assembly::Role::mapRole() : PCM::repository::Role inherits CBS::viewType::NamedElement::mapNamedElement{}


mapping CBS::viewType::assembly::RequiredRole::mapReqiredRole() : PCM::repository::OperationRequiredRole inherits CBS::viewType::assembly::Role::mapRole 
{
	requiredInterface__OperationRequiredRole := self.delegationConnector.linkedInterface.resolveone(PCM::repository::OperationInterface);
	
}

mapping CBS::viewType::assembly::ProvidedRole::mapProvidedRole() : PCM::repository::OperationProvidedRole  inherits CBS::viewType::assembly::Role::mapRole 
{
	providedInterface__OperationProvidedRole := self.delegationConnector.linkedInterface.resolveone(PCM::repository::OperationInterface);
}



//Allocation - Valerii
mapping CBS::viewType::allocation::AllocationContext::mapAllocationContext():
		PCM::allocation::AllocationContext inherits CBS::viewType::NamedElement::mapNamedElement{
	assemblyContext_AllocationContext := self.assemblyContext.resolveone(PCM::core::composition::AssemblyContext);
	resourceContainer_AllocationContext := self.container.resolveone(PCM::resourceenvironment::ResourceContainer);
}

mapping CBS::viewType::assembly::AssemblyContext::mapAssemplyContext2AssemblyContext() : PCM::core::composition::AssemblyContext inherits CBS::viewType::NamedElement::mapNamedElement{
	//delayed mapping allocation context from exisiting object
	parentStructure__AssemblyContext := self.allocationContext.resolveone(PCM::core::composition::ComposedStructure);
	encapsulatedComponent__AssemblyContext := self.instantiatedComponent.resolveone(PCM::repository::RepositoryComponent);
	

}



mapping CBS::viewType::assembly::System::mapSystem() : PCM::system::System {
	//inherits from ComposedProvidingRequiringEntity
	//again inherits from ComposedStructure
	assemblyContexts__ComposedStructure := self.encapsulatedInstances -> map mapAssemplyContext2AssemblyContext();
	//resourceRequiredDelegationConnectors__ComposedStructure := null;
	eventChannel__ComposedStructure := object PCM::core::composition::EventChannel {};
	connectors__ComposedStructure += self.delegationConnectors -> map mapDelegationConnector2DelegationConnector();
	connectors__ComposedStructure += self.assemblyConnectors -> map mapAssemblyConnector2AssemblyConnector();
	
	
}
 mapping CBS::viewType::assembly::DelegationConnector::mapDelegationConnector2DelegationConnector() : PCM::core::composition::DelegationConnector disjuncts 
 CBS::viewType::assembly::DelegationConnectorRequired::mapDelegationConnectorRequired2RequiredDelegationConnector,
 CBS::viewType::assembly::DelegationConnectorProvided::mapDelegationConnectorProvided2ProvidedDelegationConnector;

mapping CBS::viewType::assembly::DelegationConnectorRequired::mapDelegationConnectorRequired2RequiredDelegationConnector() : PCM::core::composition::RequiredDelegationConnector {
	innerRequiredRole_RequiredDelegationConnector := self.linkedRole.late resolveone(PCM::repository::OperationRequiredRole);	
	outerRequiredRole_RequiredDelegationConnector := self.linkedRole.late resolveone(PCM::repository::OperationRequiredRole);
	assemblyContext_RequiredDelegationConnector := self.linkedRole.assemblyContext.late resolveone(PCM::core::composition::AssemblyContext);
}
mapping CBS::viewType::assembly::DelegationConnectorProvided::mapDelegationConnectorProvided2ProvidedDelegationConnector() : PCM::core::composition::ProvidedDelegationConnector {
	innerProvidedRole_ProvidedDelegationConnector := self.linkedRole.late resolveone(PCM::repository::OperationProvidedRole);
	outerProvidedRole_ProvidedDelegationConnector := self.linkedRole.late resolveone(PCM::repository::OperationProvidedRole); //TODO
	assemblyContext_ProvidedDelegationConnector := self.linkedRole.assemblyContext.late resolveone(PCM::core::composition::AssemblyContext);
}
mapping CBS::viewType::assembly::AssemblyConnector::mapAssemblyConnector2AssemblyConnector() : PCM::core::composition::AssemblyConnector {
	requiringAssemblyContext_AssemblyConnector := self.requiredRole.assemblyContext.late resolveone(pcm::core::composition::AssemblyContext);
	providingAssemblyContext_AssemblyConnector := self.providedRole.assemblyContext.late resolveone(pcm::core::composition::AssemblyContext);
	providedRole_AssemblyConnector := self.providedRole -> map mapProvidedRole() -> asSequence() -> first();
	requiredRole_AssemblyConnector := self.requiredRole -> map mapReqiredRole() -> asSequence() -> first();
}

//Environment - Steffen
mapping  CBS::viewType::environment::Environment::mapEnvironment() : PCM::resourceenvironment::ResourceEnvironment {
	entityName := "";
	resourceContainer_ResourceEnvironment := self.containers->mapContainer();
	linkingResources__ResourceEnvironment := self.links->mapLink();	
	linkingResources__ResourceEnvironment->forEach(link) {
		link.oclAsType(PCM::resourceenvironment::LinkingResource).resourceEnvironment_LinkingResource := result;
	};
	resourceContainer_ResourceEnvironment->forEach(container) {
		container.oclAsType(PCM::resourceenvironment::ResourceContainer).resourceEnvironment_ResourceContainer := result;
	};
}

mapping CBS::viewType::environment::Container::mapContainer() : PCM::resourceenvironment::ResourceContainer inherits CBS::viewType::NamedElement::mapNamedElement{
	id := self.name;
}

mapping CBS::viewType::environment::Link::mapLink() : PCM::resourceenvironment::LinkingResource inherits CBS::viewType::NamedElement::mapNamedElement{
	id := self.name;
	connectedResourceContainers_LinkingResource := self.containers.resolve(PCM::resourceenvironment::ResourceContainer);
	communicationLinkResourceSpecifications_LinkingResource := object PCM::resourceenvironment::CommunicationLinkResourceSpecification{
		id := "1337";
		failureProbability := 0.0;
		linkingResource_CommunicationLinkResourceSpecification := result;
		latency_CommunicationLinkResourceSpecification := object pcm::core::PCMRandomVariable{};
		throughput_CommunicationLinkResourceSpecification := object pcm::core::PCMRandomVariable{};
		communicationLinkResourceType_CommunicationLinkResourceSpecification := object pcm::resourcetype::CommunicationLinkResourceType{
			resourceRepository_ResourceType := object pcm::resourcetype::ResourceRepository {
				availableResourceTypes_ResourceRepository += result.communicationLinkResourceSpecifications_LinkingResource.communicationLinkResourceType_CommunicationLinkResourceSpecification;
			};
			id := "";
			entityName := "";
		};
	};
}


